"use strict";(self.webpackChunkmiaoxi_blog=self.webpackChunkmiaoxi_blog||[]).push([[3524],{1709:(e,i,s)=>{s.d(i,{l:()=>t});const t=JSON.parse('{"category":{"/":{"path":"/category/","map":{"JavaScript":{"path":"/category/javascript/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]},"前端工程化":{"path":"/category/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/","indexes":[35]},"浏览器":{"path":"/category/%E6%B5%8F%E8%A7%88%E5%99%A8/","indexes":[36,37,38,39,40,41,42,43,44]},"网络":{"path":"/category/%E7%BD%91%E7%BB%9C/","indexes":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69]}}}},"tag":{"/":{"path":"/tag/","map":{}}}}')},4776:(e,i,s)=>{s.d(i,{M:()=>t});const t=JSON.parse('["/posts/codingMore/JavaScript/scopeAndScopeChain.html","/posts/codingMore/JavaScript/ExecutionStackAndContext.html","/posts/codingMore/JavaScript/debounceAndThrottle.html","/posts/codingMore/JavaScript/valueAndReference.html","/posts/codingMore/javaScript/valueAndReference.html","/posts/codingMore/JavaScript/DOMEventPropagationMechanism.html","/posts/codingMore/JavaScript/GC_MemoryLeak.html","/posts/codingMore/JavaScript/class_structure.html","/posts/codingMore/JavaScript/floatingPrecisionProblem.html","/posts/codingMore/JavaScript/let_var_const.html","/posts/codingMore/JavaScript/preventDefaultBehaviors.html","/posts/codingMore/javaScript/DOMEventPropagationMechanism.html","/posts/codingMore/javaScript/GC_MemoryLeak.html","/posts/codingMore/javaScript/class_structure.html","/posts/codingMore/javaScript/floatingPrecisionProblem.html","/posts/codingMore/javaScript/let_var_const.html","/posts/codingMore/javaScript/preventDefaultBehaviors.html","/posts/codingMore/JavaScript/closure.html","/posts/codingMore/JavaScript/eventLoop.html","/posts/codingMore/JavaScript/operator.html","/posts/codingMore/JavaScript/packagesType.html","/posts/codingMore/JavaScript/promise.html","/posts/codingMore/JavaScript/prototype.html","/posts/codingMore/JavaScript/strictMode.html","/posts/codingMore/JavaScript/this.html","/posts/codingMore/JavaScript/typeConversion.html","/posts/codingMore/javaScript/closure.html","/posts/codingMore/javaScript/eventLoop.html","/posts/codingMore/javaScript/operator.html","/posts/codingMore/javaScript/packagesType.html","/posts/codingMore/javaScript/promise.html","/posts/codingMore/javaScript/prototype.html","/posts/codingMore/javaScript/strictMode.html","/posts/codingMore/javaScript/this.html","/posts/codingMore/javaScript/typeConversion.html","/posts/codingMore/frontendEngineering/webpack.html","/posts/moreThanCode/browser/IndexedDB.html","/posts/moreThanCode/browser/browserCache.html","/posts/moreThanCode/browser/browserRenderFlow.html","/posts/moreThanCode/browser/communicationBetweenTabs.html","/posts/moreThanCode/browser/componentsOfBrowser.html","/posts/moreThanCode/browser/dataStorage.html","/posts/moreThanCode/browser/fileApis.html","/posts/moreThanCode/browser/resourceKeywords.html","/posts/moreThanCode/browser/webWorker.html","/posts/moreThanCode/designMode/FiveLayerNetworkModel.html","/posts/moreThanCode/network/CSRFAttack.html","/posts/moreThanCode/network/DNS.html","/posts/moreThanCode/network/FiveLayerNetworkModel.html","/posts/moreThanCode/network/HTTPVersionsDiffer.html","/posts/moreThanCode/network/JWT.html","/posts/moreThanCode/network/SSL_TLS_HTTPS.html","/posts/moreThanCode/network/XSSAttack.html","/posts/moreThanCode/network/afterEnterUrl.html","/posts/moreThanCode/network/breakpointResume.html","/posts/moreThanCode/network/cookie_storage.html","/posts/moreThanCode/network/cookie.html","/posts/moreThanCode/network/crossDomain-CORS.html","/posts/moreThanCode/network/crossDomain-JSONP.html","/posts/moreThanCode/network/crossDomain-proxy.html","/posts/moreThanCode/network/encrypt.html","/posts/moreThanCode/network/fileDownload.html","/posts/moreThanCode/network/fileUpload.html","/posts/moreThanCode/network/negotiatedCache.html","/posts/moreThanCode/network/networkPerformanceOptimization.html","/posts/moreThanCode/network/requestMethods.html","/posts/moreThanCode/network/sameOriginPolicy.html","/posts/moreThanCode/network/session.html","/posts/moreThanCode/network/tcp.html","/posts/moreThanCode/network/webSocket.html","/posts/codingMore/JavaScript/","/posts/codingMore/frontendEngineering/","/posts/codingMore/javaScript/","/posts/moreThanCode/browser/","/posts/moreThanCode/network/","/posts/","/posts/codingMore/","/posts/moreThanCode/","/posts/moreThanCode/designMode/","/intro.html","/posts/intro.html"]')},3781:(e,i,s)=>{s.d(i,{U:()=>t});const t=JSON.parse('{"article":{"/":{"path":"/article/","indexes":[0,1,2,3,4,5,6,70,7,8,9,10,71,35,11,12,72,13,14,15,16,73,74,75,76,77,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,78,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,79,80]}},"star":{"/":{"path":"/star/","indexes":[]}},"timeline":{"/":{"path":"/timeline/","indexes":[0,1,2,3,4,5,6,70,7,8,9,10,71,35,11,12,72,13,14,15,16,73,74,75,76,77,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,78,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,79,80]}}}')},5939:(e,i,s)=>{s.d(i,{B:()=>N});var t={};s.r(t);var a={};s.r(a);var n={};s.r(n);var o={};s.r(o),s.d(o,{default:()=>v});var r={};s.r(r),s.d(r,{default:()=>y});var l={};s.r(l);var c={};s.r(c);var p={};s.r(p),s.d(p,{default:()=>M});var d={};s.r(d),s.d(d,{default:()=>E});var h={};s.r(h),s.d(h,{default:()=>V});var m=s(3349),g=s(1781),k=s(9212);const v={enhance:({app:e})=>{e.component("CodeTabs",g.S),e.component("Tabs",k.t)}};var w=s(8031),u=s(3027);const y={enhance:({app:e})=>{e.component("CodeDemo",w.A),e.component("MdDemo",u.A)}};var b=s(8913),f=s(355),B=s(457),A=s(448),S=s(7786),C=s(641),x=s(307);const M={enhance:({app:e})=>{(0,A.L4)("VPIcon")||e.component("VPIcon",(e=>(0,C.h)(x.G,{type:"iconify",prefix:"fa6-solid:",...e})))},setup:()=>{(0,S.r9V)("https://cdn.jsdelivr.net/npm/iconify-icon@2")}};var F=s(5895),J=s(596),T=s(8831);const E={enhance:({app:e})=>{(0,A.L4)("Badge")||e.component("Badge",J.A),(0,A.L4)("VPCard")||e.component("VPCard",T.A)},setup:()=>{},rootComponents:[]};var D=s(6358),O=s(3827),z=s(1599),L=s(1266),j=s(783),P=s(8465),H=s(7107),_=s(9920);(0,P.M_)((e=>{const i=e.t,s=!1!==e.I,t=e.i;return s?{title:i,content:t?()=>[(0,C.h)((0,C.g2)("VPIcon"),{icon:t}),i]:null,order:e.O,index:e.I}:null}));const V={enhance:({app:e,router:i})=>{const{scrollBehavior:s}=i.options;i.options.scrollBehavior=async(...e)=>(await j.lE.wait(),s(...e)),(0,j.fk)(e),e.component("BloggerInfo",H.tI),e.component("SocialMedias",H.rS),e.component("GlobalEncrypt",_.J),e.component("LocalEncrypt",_.n)},setup:()=>{(0,j.PV)(),(0,j.i$)(),(0,H.su)()},layouts:{Layout:j.PE,NotFound:j.Mk,BlogCategory:H.Pn,BlogHome:H.qX,BlogType:H.z7,Timeline:H.Kf}},N=[t,a,n,m,o,r,l,c,b,f,B,p,F,d,D,O,z,L,h].map((e=>e.default)).filter(Boolean)},8164:(e,i,s)=>{s.d(i,{J:()=>a,c:()=>t});const t=JSON.parse('{"/posts/codingMore/JavaScript/GC&MemoryLeak.html":"/posts/codingMore/JavaScript/GC_MemoryLeak.html","/posts/codingMore/JavaScript/class&structure.html":"/posts/codingMore/JavaScript/class_structure.html","/posts/codingMore/JavaScript/let&var&const.html":"/posts/codingMore/JavaScript/let_var_const.html","/posts/codingMore/javaScript/GC&MemoryLeak.html":"/posts/codingMore/javaScript/GC_MemoryLeak.html","/posts/codingMore/javaScript/class&structure.html":"/posts/codingMore/javaScript/class_structure.html","/posts/codingMore/javaScript/let&var&const.html":"/posts/codingMore/javaScript/let_var_const.html","/posts/moreThanCode/network/SSL&TLS&HTTPS.html":"/posts/moreThanCode/network/SSL_TLS_HTTPS.html","/posts/moreThanCode/network/cookie&storage.html":"/posts/moreThanCode/network/cookie_storage.html"}'),a=Object.fromEntries([["/",{loader:()=>s.e(4470).then(s.bind(s,4811)),meta:{t:"主页",i:"house"}}],["/intro.html",{loader:()=>s.e(3912).then(s.bind(s,9677)),meta:{d:1739074196e3,v:"/assets/images/cover3.jpg",e:"\n<p>Place your introduction and profile here.</p>\n",r:{minutes:.04,words:13},t:"Intro Page",i:"circle-info",y:"a"}}],["/posts/",{loader:()=>s.e(8666).then(s.bind(s,7311)),meta:{d:1739717238e3,r:{minutes:.02,words:7},t:"铺子",y:"a"}}],["/posts/intro.html",{loader:()=>s.e(7228).then(s.bind(s,1940)),meta:{d:1739074196e3,v:"../../../../src/.vuepress/public/assets/images/cover3.jpg",e:"\n<p>将你的个人介绍和档案放置在此处。</p>\n",r:{minutes:.08,words:23},t:"介绍页",i:"circle-info",y:"a"}}],["/posts/codingMore/",{loader:()=>s.e(7200).then(s.bind(s,25)),meta:{d:1739717238e3,r:{minutes:.04,words:11},t:"代码不止",y:"a"}}],["/posts/moreThanCode/",{loader:()=>s.e(9592).then(s.bind(s,3695)),meta:{d:1739717238e3,r:{minutes:.04,words:11},t:"不止代码",y:"a"}}],["/posts/codingMore/JavaScript/DOMEventPropagationMechanism.html",{loader:()=>s.e(5251).then(s.bind(s,9516)),meta:{d:1739785906e3,c:["JavaScript"],e:"<h2>1 事件与事件流</h2>\n<p>事件最早是在 <em>IE3</em> 和 <em>NetscapeNavigator2</em> 中出现的，当时是作为分担服务器运算负担的一种手段。</p>\n<p>要实现和网页的互动，就需要通过 <em>JavaScript</em> 里面的事件来实现。</p>\n<p>每次用户与一个网页进行交互，例如点击链接，按下一个按键或者移动鼠标时，就会触发一个事件。我们的程序可以检测这些事件，然后对此作出响应。从而形成一种交互。</p>\n<p>这样可以使我们的页面变得更加的有意思，而不仅仅像以前一样只能进行浏览。</p>\n<p>在早期拨号上网的年代，如果所有的功能都放在服务器端进行处理的话，效率是非常低的。</p>",r:{minutes:8.62,words:2587},t:"DOM 事件的传播机制",i:"gears",O:11,y:"a"}}],["/posts/codingMore/JavaScript/ExecutionStackAndContext.html",{loader:()=>s.e(4538).then(s.bind(s,3675)),meta:{d:1740235483e3,c:["JavaScript"],e:"<h2>1. 执行上下文</h2>\n<p>执行上下文，英文全称为 <em>Execution Context</em>，一句话概括就是“代码（全局代码、函数代码）执行前进行的准备工作”，也称之为“执行上下文环境”。</p>\n<p>运行 <em>JavaScript</em> 代码时，当代码执行进入一个环境时，就会为该环境创建一个执行上下文，它会在你运行代码前做一些准备工作，如确定作用域，创建局部变量对象等。</p>\n<p>具体做了什么我们后面再说，先来看下 <em>JavaScript</em> 执行环境有哪些？</p>\n<p>*<strong>JavaScript* 中执行环境</strong></p>",r:{minutes:9.29,words:2786},t:"执行栈和执行上下文",i:"gears",O:7,y:"a"}}],["/posts/codingMore/JavaScript/GC_MemoryLeak.html",{loader:()=>s.e(2097).then(s.bind(s,7179)),meta:{d:1739785906e3,c:["JavaScript"],e:"<h2>1. 什么是内存泄露</h2>\n<p>程序的运行需要内存。只要程序提出要求，操作系统或者运行时（<em>runtime</em>）就必须供给内存。</p>\n<p>对于持续运行的服务进程（<em>daemon</em>），必须及时释放不再用到的内存。否则，内存占用越来越高，轻则影响系统性能，重则导致进程崩溃。</p>\n<p>也就是说，不再用到的内存，如果没有及时释放，就叫做内存泄漏（<em>memory leak</em>）。</p>\n<h2>2. <em>JavaScript</em> 中的垃圾回收</h2>\n<p>浏览器的 <em>Javascript</em> 具有自动垃圾回收机制（<em>GC</em>：<em>Garbage Collecation</em>），也就是说，执行环境会负责管理代码执行过程中使用的内存。其原理是：<strong>垃圾收集器会定期（周期性）找出那些不在继续使用的变量，然后释放其内存</strong>。</p>",r:{minutes:6.57,words:1970},t:"垃圾回收与内存泄漏",i:"gears",O:15,y:"a"}}],["/posts/codingMore/JavaScript/",{loader:()=>s.e(8234).then(s.bind(s,6449)),meta:{d:1739785906e3,r:{minutes:.04,words:11},t:"JavaScript",i:"https://www.runoob.com/wp-content/uploads/2013/07/js-logo.png",y:"a"}}],["/posts/codingMore/JavaScript/class_structure.html",{loader:()=>s.e(2336).then(s.bind(s,299)),meta:{d:1739785906e3,c:["JavaScript"],e:'<h2>1. 经典真题</h2>\n<ul>\n<li>根据下面 <em>ES6</em> 构造函数的书写方式，要求写出 <em>ES5</em> 的</li>\n</ul>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) { </span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() { </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fun</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) }</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    fun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  } </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:8.7,words:2610},t:"Class和普通构造器",i:"gears",O:18,y:"a"}}],["/posts/codingMore/JavaScript/closure.html",{loader:()=>s.e(1983).then(s.bind(s,3155)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. 什么是闭包</h2>\n<p>闭包，是 <em>JavaScript</em> 中一个非常重要的知识点，也是我们前端面试中较高几率被问到的知识点之一。</p>\n<p>打开《<em>JavaScript</em> 高级程序设计》和《 <em>JavaScript</em> 权威指南》，会发现里面针对闭包的解释各执一词，在网络上搜索关于闭包的内容，也发现众说纷纭，这就导致了这个知识点本身显得有点神秘，甚至还有一点玄幻。</p>\n<p>那么这个知识点真的有那么深奥么？</p>\n<p>非也！其实要理解 <em>JavaScript</em> 中的闭包，非常容易，但是在此之前你需要先知道以下两个知识点：</p>",r:{minutes:10.04,words:3013},t:"闭包",i:"gears",O:17,y:"a"}}],["/posts/codingMore/JavaScript/debounceAndThrottle.html",{loader:()=>s.e(7426).then(s.bind(s,65)),meta:{d:1740235483e3,c:["JavaScript"],e:"<h2>1. 什么是函数防抖和节流</h2>\n<p><em>JavaScript</em> 中的函数大多数情况下都是由用户主动调用触发的，除非是函数本身的实现不合理，否则一般不会遇到跟性能相关的问题。</p>\n<p>但是在一些少数情况下，函数的触发不是由用户直接控制的。在这些场景下，函数有可能被非常频繁地调用，而造成大的性能问题。解决性能问题的处理办法就有<strong>函数防抖</strong>和<strong>函数节流</strong>。</p>\n<p>下面是函数被频繁调用的常见的几个场景：</p>\n<ul>\n<li><code>mousemove</code> 事件：如果要实现一个拖拽功能，需要一路监听  <code>mousemove</code> 事件，在回调中获取元素当前位置，然后重置 <em>DOM</em> 的位置来进行样式改变。如果不加以控制，每移动一定像素而触发的回调数量非常惊人，回调中又伴随着 DOM 操作，继而引发浏览器的重排与重绘，性能差的浏览器可能就会直接假死。</li>\n<li><code>window.onresize</code> 事件：为  <code>window</code> 对象绑定了 <em>resize</em> 事件，当浏览器窗口大小被拖动而改变的时候，这个事件触发的频率非常之高。如果在  <code>window.onresize</code> 事件函数里有一些跟 <em>DOM</em> 节点相关的操作，而跟 <em>DOM</em> 节点相关的操作往往是非常消耗性能的，这时候浏览器可能就会吃不消而造成卡顿现象。</li>\n<li>射击游戏的 <em>mousedown/keydown</em> 事件（单位时间只能发射一颗子弹）</li>\n<li>搜索联想（<em>keyup</em> 事件）</li>\n<li>监听滚动事件判断是否到页面底部自动加载更多（<em>scroll</em> 事件）</li>\n</ul>",r:{minutes:8.99,words:2697},t:"防抖和节流",i:"gears",O:19,y:"a"}}],["/posts/codingMore/JavaScript/eventLoop.html",{loader:()=>s.e(360).then(s.bind(s,7942)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. <em>Node.js</em> 与浏览器的事件循环有何区别？</h2>\n<h3>1.1 进程与线程</h3>\n<p>我们经常说 <em>JavaScript</em> 是一门单线程语言，指的是一个进程里只有一个主线程，那到底什么是线程？什么是进程？</p>\n<p>首先需要把这个问题搞明白。</p>\n<p>进程是 <em>CPU</em> 资源分配的最小单位，而线程是 <em>CPU</em> 调度的最小单位。举个例子，看下面的图：</p>\n<figure><figcaption></figcaption></figure>\n<ul>\n<li>进程好比图中的工厂，有单独的专属自己的工厂资源。</li>\n<li>线程好比图中的工人，多个工人在一个工厂中协作工作，工厂与工人是 <em>1:n</em> 的关系。也就是说<strong>一个进程由一个或多个线程组成，线程是一个进程中代码的不同执行路线</strong>。</li>\n<li>工厂的空间是工人们共享的，这象征<strong>一个进程的内存空间是共享的，每个线程都可用这些共享内存</strong>。</li>\n<li>多个工厂之间独立存在。</li>\n</ul>",r:{minutes:13.88,words:4163},t:"事件循环",i:"gears",O:16,y:"a"}}],["/posts/codingMore/JavaScript/floatingPrecisionProblem.html",{loader:()=>s.e(8613).then(s.bind(s,5557)),meta:{d:1739785906e3,c:["JavaScript"],e:"<h2>1. 浮点数精度常见问题</h2>\n<p>在 <em>JavaScript</em> 中整数和浮点数都属于 <em>number</em> 数据类型，所有数字都是以 <em>64</em> 位浮点数形式储存，即便整数也是如此。 所以我们在打印 <em>1.00</em> 这样的浮点数的结果是 <em>1</em> 而非 <em>1.00</em> 。</p>\n<p>在一些特殊的数值表示中，例如金额，这样看上去有点别扭，但是至少值是正确了。</p>\n<p>然而要命的是，当浮点数做数学运算的时候，你经常会发现一些问题，举几个例子：</p>\n<p><strong>场景一</strong>：进行浮点值运算结果的判断</p>",r:{minutes:6,words:1801},t:"浮点数精度问题",i:"gears",O:13,y:"a"}}],["/posts/codingMore/JavaScript/let_var_const.html",{loader:()=>s.e(7817).then(s.bind(s,4046)),meta:{d:1739785906e3,c:["JavaScript"],e:"<h2>1. 声明变量关键字汇总</h2>\n<p>在 <em>JavaScript</em> 中，一共存在 <em>3</em> 种声明变量的方式：</p>\n<ul>\n<li><code>var</code></li>\n<li><code>let</code></li>\n<li><code>const</code></li>\n</ul>\n<p>之所以有 <em>3</em> 种方式，这是由于历史原因造成的。最初声明变量的关键字就是 <code>var</code>，但是为了解决作用域的问题，所以后面新增了 <code>let</code> 和 <code>const</code> 的方式。</p>",r:{minutes:6.51,words:1953},t:"let、var、const",i:"gears",O:1,y:"a"}}],["/posts/codingMore/JavaScript/operator.html",{loader:()=>s.e(9192).then(s.bind(s,9519)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. 算术运算符</h2>\n<p><em>JavaScript</em> 共提供 <em>10</em> 个算术运算符，用来完成基本的算术运算。</p>\n<ul>\n<li><strong>加法运算符</strong>：<code>x + y</code></li>\n<li><strong>减法运算符</strong>： <code>x - y</code></li>\n<li><strong>乘法运算符</strong>： <code>x * y</code></li>\n<li><strong>除法运算符</strong>：<code>x / y</code></li>\n<li><strong>指数运算符</strong>：<code>x ** y</code></li>\n<li><strong>余数运算符</strong>：<code>x % y</code></li>\n<li><strong>自增运算符</strong>：<code>++x</code> 或者 <code>x++</code></li>\n<li><strong>自减运算符</strong>：<code>--x</code> 或者 <code>x--</code></li>\n<li><strong>数值运算符</strong>： <code>+x</code></li>\n<li><strong>负数值运算符</strong>：<code>-x</code></li>\n</ul>",r:{minutes:27.9,words:8370},t:"运算符",i:"fa:wrench",O:5,y:"a"}}],["/posts/codingMore/JavaScript/packagesType.html",{loader:()=>s.e(777).then(s.bind(s,922)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. 解释</h2>\n<p>在 <em>ES</em> 中，数据的分类分为<strong>基本数据类型</strong>和<strong>引用类型</strong>。</p>\n<p>按照最新 <em>ES</em> 标准定义，基本数据类型（<em>primitive value</em>）包括 <code>undefined</code>、<code>null</code>、<code>boolean</code>、<code>number</code>、<code>symbol</code>、<code>string</code>。</p>\n<p>引用类型包括 <code>Object</code>、<code>Array</code>、<code>Date</code>、<code>RegExp</code> 等。</p>",r:{minutes:5.7,words:1709},t:"包装类型",i:"gears",O:3,y:"a"}}],["/posts/codingMore/JavaScript/preventDefaultBehaviors.html",{loader:()=>s.e(7588).then(s.bind(s,5751)),meta:{d:1739785906e3,c:["JavaScript"],e:'<h2>1. 什么是默认行为</h2>\n<p>所谓默认行为，一般是指 <code>HTML</code> 元素所自带的行为。例如点击一个 <code>a</code> 元素表示的是跳转：</p>\n<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://www.baidu.com"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;百度一下&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:3.51,words:1054},t:"阻止事件默认行为",i:"gears",O:12,y:"a"}}],["/posts/codingMore/JavaScript/promise.html",{loader:()=>s.e(583).then(s.bind(s,5484)),meta:{d:1739717238e3,c:["JavaScript"],e:'<h2>1. Promise基础</h2>\n<h3>1.1 Promise规范</h3>\n<p>Promise是一套专门处理异步场景的规范，它能有效的避免回调地狱的产生，使异步代码更加清晰、简洁、统一</p>\n<p>这套规范最早诞生于前端社区，规范名称为<a href="https://promisesaplus.com/" target="_blank" rel="noopener noreferrer">Promise A+</a></p>\n<p>该规范出现后，立即得到了很多开发者的响应</p>\n<p>Promise A+ 规定：</p>\n<ol>\n<li>\n<p>所有的异步场景，都可以看作是一个异步任务，每个异步任务，在JS中应该表现为一个<strong>对象</strong>，该对象称之为<strong>Promise对象</strong>，也叫做任务对象</p>\n\n</li>\n<li>\n<p>每个任务对象，都应该有两个阶段、三个状态</p>\n\n<p>根据常理，它们之间存在以下逻辑：</p>\n<ul>\n<li>任务总是从未决阶段变到已决阶段，无法逆行</li>\n<li>任务总是从挂起状态变到完成或失败状态，无法逆行</li>\n<li>时间不能倒流，历史不可改写，任务一旦完成或失败，状态就固定下来，永远无法改变</li>\n</ul>\n</li>\n<li>\n<p><code>挂起-&gt;完成</code>，称之为<code>resolve</code>；<code>挂起-&gt;失败</code>称之为<code>reject</code>。任务完成时，可能有一个相关数据；任务失败时，可能有一个失败原因。</p>\n<figure><figcaption></figcaption></figure>\n</li>\n<li>\n<p>可以针对任务进行后续处理，针对完成状态的后续处理称之为onFulfilled，针对失败的后续处理称之为onRejected</p>\n<figure><figcaption></figcaption></figure>\n</li>\n</ol>',r:{minutes:8.47,words:2540},t:"Promise",i:"gears",O:19,y:"a"}}],["/posts/codingMore/JavaScript/prototype.html",{loader:()=>s.e(9460).then(s.bind(s,9259)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. 解释</h2>\n<p>在 <em>Brendan Eich</em> 设计 <em>JavaScript</em> 时，借鉴了 <em>Self</em> 和 <em>Smalltalk</em> 这两门基于原型的语言。</p>\n<p>之所以选择基于原型的对象系统，是因为 <em>Brendan Eich</em> 一开始就没有打算在 <em>JavaScript</em> 中加入类的概念，因为 <em>JavaScript</em> 的设计初衷就是为非专业的开发人员（例如网页设计者）提供一个方便的工具。由于大部分网页设计者都没有任何的编程背景，所以在设计 <em>JavaScript</em> 时也是尽可能使其简单、易学。</p>",r:{minutes:7.74,words:2321},t:"原型和原型链",i:"fa:chain",O:6,y:"a"}}],["/posts/codingMore/JavaScript/scopeAndScopeChain.html",{loader:()=>s.e(7444).then(s.bind(s,4458)),meta:{d:1740308831e3,c:["JavaScript"],e:'<h2>1. 什么是作用域</h2>\n<p>作用域是在运行时代码中的某些特定部分中变量，函数和对象的可访问性。</p>\n<p>换句话说，作用域决定了代码区块中变量和其他资源的可见性。</p>\n<p>可能这两句话并不好理解，我们先来看个例子：</p>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> outFun2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> inVariable</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "内层变量2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">outFun2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">inVariable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Uncaught ReferenceError: inVariable is not defined</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:10.07,words:3021},t:"作用域和作用域链",i:"fa:chain",O:8,y:"a"}}],["/posts/codingMore/JavaScript/strictMode.html",{loader:()=>s.e(4070).then(s.bind(s,9822)),meta:{d:1739717238e3,c:["JavaScript"],e:'<h2>1. 什么是严格模式</h2>\n<p>严格模式是从 <em>ES5</em> 开始新增的一种方式，是采用具有限制性 <em>JavaScript</em> 变体的一种方式，从而使代码隐式地脱离“马虎模式/稀松模式/懒散模式“（<em>sloppy</em>）模式。</p>\n<p>设立"严格模式"的目的，主要有以下几个：</p>\n<ul>\n<li>消除 <em>Javascript</em> 语法的一些不合理、不严谨之处，减少一些怪异行为;</li>\n<li>消除代码运行的一些不安全之处，保证代码运行的安全；</li>\n<li>提高编译器效率，增加运行速度；</li>\n<li>为未来新版本的 <em>Javascript</em> 做好铺垫。</li>\n</ul>',r:{minutes:5.58,words:1674},t:"严格模式",i:"gears",O:14,y:"a"}}],["/posts/codingMore/JavaScript/this.html",{loader:()=>s.e(3444).then(s.bind(s,2390)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1.  <code>this</code> 指向总结</h2>\n<p><code>this</code> 关键字是一个非常重要的语法点。毫不夸张地说，不理解它的含义，大部分开发任务都无法完成。</p>\n<p><code>this</code> 可以用在构造函数之中，表示实例对象。除此之外， <code>this</code> 还可以用在别的场合。<strong>但不管是什么场合，*this* 都有一个共同点：它总是返回一个对象</strong>。</p>\n<p>关于  <code>this</code> 的指向，有一种广为流传的说法就是“谁调用它， <code>this</code> 就指向谁”。</p>",r:{minutes:14.37,words:4310},t:"this指向",i:"gears",O:9,y:"a"}}],["/posts/codingMore/JavaScript/typeConversion.html",{loader:()=>s.e(5848).then(s.bind(s,6285)),meta:{d:1739717238e3,c:["JavaScript"],e:'<h2>1. 数据类型转换介绍</h2>\n<p><em>JavaScript</em> 是一种动态类型语言，变量没有类型限制，可以随时赋予任意值。</p>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'a\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:10.62,words:3187},t:"数据类型的转换",i:"gears",O:4,y:"a"}}],["/posts/codingMore/JavaScript/valueAndReference.html",{loader:()=>s.e(1425).then(s.bind(s,1732)),meta:{d:1740043709e3,c:["JavaScript"],e:'<p>在 <em>JavaScript</em> 中，数据类型整体上来讲可以分为两大类：<strong>基本类型</strong>和<strong>引用数据类型</strong></p>\n<p>基本数据类型，一共有 <em>6</em> 种：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>string，symbol，number，boolean，undefined，null</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:8.06,words:2417},t:"值和引用",i:"ic:baseline-insert-link",O:2,y:"a"}}],["/posts/codingMore/frontendEngineering/",{loader:()=>s.e(344).then(s.bind(s,1655)),meta:{d:1739785906e3,r:{minutes:.03,words:10},t:"前端工程化",y:"a"}}],["/posts/codingMore/frontendEngineering/webpack.html",{loader:()=>s.e(1871).then(s.bind(s,5316)),meta:{d:1739785906e3,c:["前端工程化"],e:"<p>8888</p>\n",r:{minutes:.06,words:17},t:"Webpack",i:"https://webpack.js.org/icon-square-small-slack.1c7f4f7a52c41f94.png",O:1,y:"a"}}],["/posts/codingMore/javaScript/DOMEventPropagationMechanism.html",{loader:()=>s.e(5507).then(s.bind(s,1344)),meta:{d:1739785906e3,c:["JavaScript"],e:"<h2>1 事件与事件流</h2>\n<p>事件最早是在 <em>IE3</em> 和 <em>NetscapeNavigator2</em> 中出现的，当时是作为分担服务器运算负担的一种手段。</p>\n<p>要实现和网页的互动，就需要通过 <em>JavaScript</em> 里面的事件来实现。</p>\n<p>每次用户与一个网页进行交互，例如点击链接，按下一个按键或者移动鼠标时，就会触发一个事件。我们的程序可以检测这些事件，然后对此作出响应。从而形成一种交互。</p>\n<p>这样可以使我们的页面变得更加的有意思，而不仅仅像以前一样只能进行浏览。</p>\n<p>在早期拨号上网的年代，如果所有的功能都放在服务器端进行处理的话，效率是非常低的。</p>",r:{minutes:8.62,words:2587},t:"DOM 事件的传播机制",i:"gears",O:11,y:"a"}}],["/posts/codingMore/javaScript/GC_MemoryLeak.html",{loader:()=>s.e(9265).then(s.bind(s,3719)),meta:{d:1739785906e3,c:["JavaScript"],e:"<h2>1. 什么是内存泄露</h2>\n<p>程序的运行需要内存。只要程序提出要求，操作系统或者运行时（<em>runtime</em>）就必须供给内存。</p>\n<p>对于持续运行的服务进程（<em>daemon</em>），必须及时释放不再用到的内存。否则，内存占用越来越高，轻则影响系统性能，重则导致进程崩溃。</p>\n<p>也就是说，不再用到的内存，如果没有及时释放，就叫做内存泄漏（<em>memory leak</em>）。</p>\n<h2>2. <em>JavaScript</em> 中的垃圾回收</h2>\n<p>浏览器的 <em>Javascript</em> 具有自动垃圾回收机制（<em>GC</em>：<em>Garbage Collecation</em>），也就是说，执行环境会负责管理代码执行过程中使用的内存。其原理是：<strong>垃圾收集器会定期（周期性）找出那些不在继续使用的变量，然后释放其内存</strong>。</p>",r:{minutes:6.57,words:1970},t:"垃圾回收与内存泄漏",i:"gears",O:15,y:"a"}}],["/posts/codingMore/javaScript/",{loader:()=>s.e(8746).then(s.bind(s,9974)),meta:{d:1739785906e3,r:{minutes:.04,words:11},t:"JavaScript",i:"https://www.runoob.com/wp-content/uploads/2013/07/js-logo.png",y:"a"}}],["/posts/codingMore/javaScript/class_structure.html",{loader:()=>s.e(3728).then(s.bind(s,1248)),meta:{d:1739785906e3,c:["JavaScript"],e:'<h2>1. 经典真题</h2>\n<ul>\n<li>根据下面 <em>ES6</em> 构造函数的书写方式，要求写出 <em>ES5</em> 的</li>\n</ul>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) { </span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() { </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fun</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) }</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    fun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  } </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> e</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'Hello\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:8.7,words:2610},t:"Class和普通构造器",i:"gears",O:18,y:"a"}}],["/posts/codingMore/javaScript/closure.html",{loader:()=>s.e(9567).then(s.bind(s,4745)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. 什么是闭包</h2>\n<p>闭包，是 <em>JavaScript</em> 中一个非常重要的知识点，也是我们前端面试中较高几率被问到的知识点之一。</p>\n<p>打开《<em>JavaScript</em> 高级程序设计》和《 <em>JavaScript</em> 权威指南》，会发现里面针对闭包的解释各执一词，在网络上搜索关于闭包的内容，也发现众说纷纭，这就导致了这个知识点本身显得有点神秘，甚至还有一点玄幻。</p>\n<p>那么这个知识点真的有那么深奥么？</p>\n<p>非也！其实要理解 <em>JavaScript</em> 中的闭包，非常容易，但是在此之前你需要先知道以下两个知识点：</p>",r:{minutes:10.04,words:3013},t:"闭包",i:"gears",O:17,y:"a"}}],["/posts/codingMore/javaScript/eventLoop.html",{loader:()=>s.e(5496).then(s.bind(s,4859)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. <em>Node.js</em> 与浏览器的事件循环有何区别？</h2>\n<h3>1.1 进程与线程</h3>\n<p>我们经常说 <em>JavaScript</em> 是一门单线程语言，指的是一个进程里只有一个主线程，那到底什么是线程？什么是进程？</p>\n<p>首先需要把这个问题搞明白。</p>\n<p>进程是 <em>CPU</em> 资源分配的最小单位，而线程是 <em>CPU</em> 调度的最小单位。举个例子，看下面的图：</p>\n<figure><figcaption></figcaption></figure>\n<ul>\n<li>进程好比图中的工厂，有单独的专属自己的工厂资源。</li>\n<li>线程好比图中的工人，多个工人在一个工厂中协作工作，工厂与工人是 <em>1:n</em> 的关系。也就是说<strong>一个进程由一个或多个线程组成，线程是一个进程中代码的不同执行路线</strong>。</li>\n<li>工厂的空间是工人们共享的，这象征<strong>一个进程的内存空间是共享的，每个线程都可用这些共享内存</strong>。</li>\n<li>多个工厂之间独立存在。</li>\n</ul>",r:{minutes:13.88,words:4163},t:"事件循环",i:"gears",O:16,y:"a"}}],["/posts/codingMore/javaScript/floatingPrecisionProblem.html",{loader:()=>s.e(4389).then(s.bind(s,7291)),meta:{d:1739785906e3,c:["JavaScript"],e:"<h2>1. 浮点数精度常见问题</h2>\n<p>在 <em>JavaScript</em> 中整数和浮点数都属于 <em>number</em> 数据类型，所有数字都是以 <em>64</em> 位浮点数形式储存，即便整数也是如此。 所以我们在打印 <em>1.00</em> 这样的浮点数的结果是 <em>1</em> 而非 <em>1.00</em> 。</p>\n<p>在一些特殊的数值表示中，例如金额，这样看上去有点别扭，但是至少值是正确了。</p>\n<p>然而要命的是，当浮点数做数学运算的时候，你经常会发现一些问题，举几个例子：</p>\n<p><strong>场景一</strong>：进行浮点值运算结果的判断</p>",r:{minutes:6,words:1801},t:"浮点数精度问题",i:"gears",O:13,y:"a"}}],["/posts/codingMore/javaScript/let_var_const.html",{loader:()=>s.e(9897).then(s.bind(s,8418)),meta:{d:1739785906e3,c:["JavaScript"],e:"<h2>1. 声明变量关键字汇总</h2>\n<p>在 <em>JavaScript</em> 中，一共存在 <em>3</em> 种声明变量的方式：</p>\n<ul>\n<li><code>var</code></li>\n<li><code>let</code></li>\n<li><code>const</code></li>\n</ul>\n<p>之所以有 <em>3</em> 种方式，这是由于历史原因造成的。最初声明变量的关键字就是 <code>var</code>，但是为了解决作用域的问题，所以后面新增了 <code>let</code> 和 <code>const</code> 的方式。</p>",r:{minutes:6.51,words:1953},t:"let、var、const",i:"gears",O:1,y:"a"}}],["/posts/codingMore/javaScript/operator.html",{loader:()=>s.e(4248).then(s.bind(s,287)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. 算术运算符</h2>\n<p><em>JavaScript</em> 共提供 <em>10</em> 个算术运算符，用来完成基本的算术运算。</p>\n<ul>\n<li><strong>加法运算符</strong>：<code>x + y</code></li>\n<li><strong>减法运算符</strong>： <code>x - y</code></li>\n<li><strong>乘法运算符</strong>： <code>x * y</code></li>\n<li><strong>除法运算符</strong>：<code>x / y</code></li>\n<li><strong>指数运算符</strong>：<code>x ** y</code></li>\n<li><strong>余数运算符</strong>：<code>x % y</code></li>\n<li><strong>自增运算符</strong>：<code>++x</code> 或者 <code>x++</code></li>\n<li><strong>自减运算符</strong>：<code>--x</code> 或者 <code>x--</code></li>\n<li><strong>数值运算符</strong>： <code>+x</code></li>\n<li><strong>负数值运算符</strong>：<code>-x</code></li>\n</ul>",r:{minutes:27.9,words:8370},t:"运算符",i:"fa:wrench",O:5,y:"a"}}],["/posts/codingMore/javaScript/packagesType.html",{loader:()=>s.e(5865).then(s.bind(s,3085)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. 解释</h2>\n<p>在 <em>ES</em> 中，数据的分类分为<strong>基本数据类型</strong>和<strong>引用类型</strong>。</p>\n<p>按照最新 <em>ES</em> 标准定义，基本数据类型（<em>primitive value</em>）包括 <code>undefined</code>、<code>null</code>、<code>boolean</code>、<code>number</code>、<code>symbol</code>、<code>string</code>。</p>\n<p>引用类型包括 <code>Object</code>、<code>Array</code>、<code>Date</code>、<code>RegExp</code> 等。</p>",r:{minutes:5.7,words:1709},t:"包装类型",i:"gears",O:3,y:"a"}}],["/posts/codingMore/javaScript/preventDefaultBehaviors.html",{loader:()=>s.e(9700).then(s.bind(s,8713)),meta:{d:1739785906e3,c:["JavaScript"],e:'<h2>1. 什么是默认行为</h2>\n<p>所谓默认行为，一般是指 <code>HTML</code> 元素所自带的行为。例如点击一个 <code>a</code> 元素表示的是跳转：</p>\n<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://www.baidu.com"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;百度一下&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:3.51,words:1054},t:"阻止事件默认行为",i:"gears",O:12,y:"a"}}],["/posts/codingMore/javaScript/promise.html",{loader:()=>s.e(1191).then(s.bind(s,5840)),meta:{d:1739717238e3,c:["JavaScript"],e:'<h2>1. Promise基础</h2>\n<h3>1.1 Promise规范</h3>\n<p>Promise是一套专门处理异步场景的规范，它能有效的避免回调地狱的产生，使异步代码更加清晰、简洁、统一</p>\n<p>这套规范最早诞生于前端社区，规范名称为<a href="https://promisesaplus.com/" target="_blank" rel="noopener noreferrer">Promise A+</a></p>\n<p>该规范出现后，立即得到了很多开发者的响应</p>\n<p>Promise A+ 规定：</p>\n<ol>\n<li>\n<p>所有的异步场景，都可以看作是一个异步任务，每个异步任务，在JS中应该表现为一个<strong>对象</strong>，该对象称之为<strong>Promise对象</strong>，也叫做任务对象</p>\n\n</li>\n<li>\n<p>每个任务对象，都应该有两个阶段、三个状态</p>\n\n<p>根据常理，它们之间存在以下逻辑：</p>\n<ul>\n<li>任务总是从未决阶段变到已决阶段，无法逆行</li>\n<li>任务总是从挂起状态变到完成或失败状态，无法逆行</li>\n<li>时间不能倒流，历史不可改写，任务一旦完成或失败，状态就固定下来，永远无法改变</li>\n</ul>\n</li>\n<li>\n<p><code>挂起-&gt;完成</code>，称之为<code>resolve</code>；<code>挂起-&gt;失败</code>称之为<code>reject</code>。任务完成时，可能有一个相关数据；任务失败时，可能有一个失败原因。</p>\n<figure><figcaption></figcaption></figure>\n</li>\n<li>\n<p>可以针对任务进行后续处理，针对完成状态的后续处理称之为onFulfilled，针对失败的后续处理称之为onRejected</p>\n<figure><figcaption></figcaption></figure>\n</li>\n</ol>',r:{minutes:8.47,words:2540},t:"Promise",i:"gears",O:19,y:"a"}}],["/posts/codingMore/javaScript/prototype.html",{loader:()=>s.e(6660).then(s.bind(s,1242)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1. 解释</h2>\n<p>在 <em>Brendan Eich</em> 设计 <em>JavaScript</em> 时，借鉴了 <em>Self</em> 和 <em>Smalltalk</em> 这两门基于原型的语言。</p>\n<p>之所以选择基于原型的对象系统，是因为 <em>Brendan Eich</em> 一开始就没有打算在 <em>JavaScript</em> 中加入类的概念，因为 <em>JavaScript</em> 的设计初衷就是为非专业的开发人员（例如网页设计者）提供一个方便的工具。由于大部分网页设计者都没有任何的编程背景，所以在设计 <em>JavaScript</em> 时也是尽可能使其简单、易学。</p>",r:{minutes:7.74,words:2321},t:"原型和原型链",i:"fa:chain",O:6,y:"a"}}],["/posts/codingMore/javaScript/strictMode.html",{loader:()=>s.e(5654).then(s.bind(s,3110)),meta:{d:1739717238e3,c:["JavaScript"],e:'<h2>1. 什么是严格模式</h2>\n<p>严格模式是从 <em>ES5</em> 开始新增的一种方式，是采用具有限制性 <em>JavaScript</em> 变体的一种方式，从而使代码隐式地脱离“马虎模式/稀松模式/懒散模式“（<em>sloppy</em>）模式。</p>\n<p>设立"严格模式"的目的，主要有以下几个：</p>\n<ul>\n<li>消除 <em>Javascript</em> 语法的一些不合理、不严谨之处，减少一些怪异行为;</li>\n<li>消除代码运行的一些不安全之处，保证代码运行的安全；</li>\n<li>提高编译器效率，增加运行速度；</li>\n<li>为未来新版本的 <em>Javascript</em> 做好铺垫。</li>\n</ul>',r:{minutes:5.58,words:1674},t:"严格模式",i:"gears",O:14,y:"a"}}],["/posts/codingMore/javaScript/this.html",{loader:()=>s.e(3716).then(s.bind(s,8056)),meta:{d:1739717238e3,c:["JavaScript"],e:"<h2>1.  <code>this</code> 指向总结</h2>\n<p><code>this</code> 关键字是一个非常重要的语法点。毫不夸张地说，不理解它的含义，大部分开发任务都无法完成。</p>\n<p><code>this</code> 可以用在构造函数之中，表示实例对象。除此之外， <code>this</code> 还可以用在别的场合。<strong>但不管是什么场合，*this* 都有一个共同点：它总是返回一个对象</strong>。</p>\n<p>关于  <code>this</code> 的指向，有一种广为流传的说法就是“谁调用它， <code>this</code> 就指向谁”。</p>",r:{minutes:14.37,words:4310},t:"this指向",i:"gears",O:9,y:"a"}}],["/posts/codingMore/javaScript/typeConversion.html",{loader:()=>s.e(7848).then(s.bind(s,1723)),meta:{d:1739717238e3,c:["JavaScript"],e:'<h2>1. 数据类型转换介绍</h2>\n<p><em>JavaScript</em> 是一种动态类型语言，变量没有类型限制，可以随时赋予任意值。</p>\n<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD"> ?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'a\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:10.62,words:3187},t:"数据类型的转换",i:"gears",O:4,y:"a"}}],["/posts/codingMore/javaScript/valueAndReference.html",{loader:()=>s.e(4177).then(s.bind(s,223)),meta:{d:1740043709e3,c:["JavaScript"],e:'<p>在 <em>JavaScript</em> 中，数据类型整体上来讲可以分为两大类：<strong>基本类型</strong>和<strong>引用数据类型</strong></p>\n<p>基本数据类型，一共有 <em>6</em> 种：</p>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>string，symbol，number，boolean，undefined，null</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:8.06,words:2417},t:"值和引用",i:"ic:baseline-insert-link",O:2,y:"a"}}],["/posts/moreThanCode/browser/IndexedDB.html",{loader:()=>s.e(5248).then(s.bind(s,2792)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.04,words:11},t:"IndexedDB",i:"gears",O:5,y:"a"}}],["/posts/moreThanCode/browser/",{loader:()=>s.e(1948).then(s.bind(s,4528)),meta:{d:1739785906e3,r:{minutes:.03,words:8},t:"浏览器",y:"a"}}],["/posts/moreThanCode/browser/browserCache.html",{loader:()=>s.e(977).then(s.bind(s,9596)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"浏览器缓存",i:"gears",O:7,y:"a"}}],["/posts/moreThanCode/browser/browserRenderFlow.html",{loader:()=>s.e(4639).then(s.bind(s,4214)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.06,words:17},t:"浏览器渲染流程",i:"gears",O:1,y:"a"}}],["/posts/moreThanCode/browser/communicationBetweenTabs.html",{loader:()=>s.e(5311).then(s.bind(s,2675)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.06,words:19},t:"跨标签页通信",i:"line-md:arrows-horizontal",O:8,y:"a"}}],["/posts/moreThanCode/browser/componentsOfBrowser.html",{loader:()=>s.e(5100).then(s.bind(s,2097)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.06,words:18},t:"浏览器的组成部分",i:"gears",O:3,y:"a"}}],["/posts/moreThanCode/browser/dataStorage.html",{loader:()=>s.e(6106).then(s.bind(s,5393)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.06,words:17},t:"浏览器离线存储",i:"gears",O:4,y:"a"}}],["/posts/moreThanCode/browser/fileApis.html",{loader:()=>s.e(8188).then(s.bind(s,3035)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"File API",i:"line-md:file-export",O:6,y:"a"}}],["/posts/moreThanCode/browser/resourceKeywords.html",{loader:()=>s.e(1071).then(s.bind(s,8097)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.06,words:17},t:"资源提示关键词",i:"gears",O:2,y:"a"}}],["/posts/moreThanCode/browser/webWorker.html",{loader:()=>s.e(5539).then(s.bind(s,6474)),meta:{d:1739717238e3,c:["浏览器"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"Web worker",i:"line-md:cog-loop",O:9,y:"a"}}],["/posts/moreThanCode/designMode/FiveLayerNetworkModel.html",{loader:()=>s.e(7050).then(s.bind(s,9786)),meta:{d:1739717238e3,c:["网络"],e:"<p>666</p>\n",r:{minutes:.05,words:15},t:"五层网络模型",i:"gears",O:1,y:"a"}}],["/posts/moreThanCode/designMode/",{loader:()=>s.e(5464).then(s.bind(s,7877)),meta:{d:1739717238e3,r:{minutes:.03,words:9},t:"设计模式",y:"a"}}],["/posts/moreThanCode/network/CSRFAttack.html",{loader:()=>s.e(5855).then(s.bind(s,7351)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:12},t:"CSRF攻击",i:"gears",O:17,y:"a"}}],["/posts/moreThanCode/network/DNS.html",{loader:()=>s.e(7958).then(s.bind(s,6959)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"域名和DNS",i:"eos-icons:dns",O:21,y:"a"}}],["/posts/moreThanCode/network/FiveLayerNetworkModel.html",{loader:()=>s.e(1055).then(s.bind(s,6496)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"五层网络模型",i:"gears",O:1,y:"a"}}],["/posts/moreThanCode/network/HTTPVersionsDiffer.html",{loader:()=>s.e(9744).then(s.bind(s,6911)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"HTTP各版本差异",i:"gears",O:23,y:"a"}}],["/posts/moreThanCode/network/JWT.html",{loader:()=>s.e(592).then(s.bind(s,3036)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.03,words:10},t:"JWT",i:"gears",O:6,y:"a"}}],["/posts/moreThanCode/network/",{loader:()=>s.e(2629).then(s.bind(s,8014)),meta:{d:1739785906e3,r:{minutes:.02,words:7},t:"网络",y:"a"}}],["/posts/moreThanCode/network/SSL_TLS_HTTPS.html",{loader:()=>s.e(9951).then(s.bind(s,2850)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:12},t:"SSL、TLS、HTTPS",i:"gears",O:22,y:"a"}}],["/posts/moreThanCode/network/XSSAttack.html",{loader:()=>s.e(6863).then(s.bind(s,3820)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:12},t:"XSS攻击",i:"gears",O:18,y:"a"}}],["/posts/moreThanCode/network/afterEnterUrl.html",{loader:()=>s.e(6784).then(s.bind(s,6418)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"输入 url 地址后",i:"gears",O:12,y:"a"}}],["/posts/moreThanCode/network/breakpointResume.html",{loader:()=>s.e(2229).then(s.bind(s,5304)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.05,words:16},t:"断点续传",i:"line-md:uploading-loop",O:20,y:"a"}}],["/posts/moreThanCode/network/cookie_storage.html",{loader:()=>s.e(8529).then(s.bind(s,7809)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:12},t:"cookie和storage",i:"gears",O:4,y:"a"}}],["/posts/moreThanCode/network/cookie.html",{loader:()=>s.e(1043).then(s.bind(s,6197)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:12},t:"cookie和storage",i:"gears",O:4,y:"a"}}],["/posts/moreThanCode/network/crossDomain-CORS.html",{loader:()=>s.e(3567).then(s.bind(s,8639)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:12},t:"跨域-CORS",i:"gears",O:9,y:"a"}}],["/posts/moreThanCode/network/crossDomain-JSONP.html",{loader:()=>s.e(4162).then(s.bind(s,3693)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:12},t:"跨域-JSONP",i:"gears",O:10,y:"a"}}],["/posts/moreThanCode/network/crossDomain-proxy.html",{loader:()=>s.e(5856).then(s.bind(s,7777)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:13},t:"跨域-代理",i:"gears",O:8,y:"a"}}],["/posts/moreThanCode/network/encrypt.html",{loader:()=>s.e(5540).then(s.bind(s,1728)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:11},t:"加密",i:"gears",O:5,y:"a"}}],["/posts/moreThanCode/network/fileDownload.html",{loader:()=>s.e(4067).then(s.bind(s,1145)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.06,words:17},t:"文件下载",i:"line-md:download-outline-loop",O:13,y:"a"}}],["/posts/moreThanCode/network/fileUpload.html",{loader:()=>s.e(1602).then(s.bind(s,7005)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.06,words:17},t:"文件上传",i:"line-md:upload-outline-loop",O:11,y:"a"}}],["/posts/moreThanCode/network/negotiatedCache.html",{loader:()=>s.e(5671).then(s.bind(s,7137)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.06,words:18},t:"HTTP缓存协议（协商缓存）",i:"gears",O:15,y:"a"}}],["/posts/moreThanCode/network/networkPerformanceOptimization.html",{loader:()=>s.e(544).then(s.bind(s,5536)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"网络性能优化",i:"gears",O:19,y:"a"}}],["/posts/moreThanCode/network/requestMethods.html",{loader:()=>s.e(7016).then(s.bind(s,6055)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.05,words:15},t:"常见请求方法",i:"gears",O:2,y:"a"}}],["/posts/moreThanCode/network/sameOriginPolicy.html",{loader:()=>s.e(2511).then(s.bind(s,2368)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:13},t:"同源策略",i:"gears",O:7,y:"a"}}],["/posts/moreThanCode/network/session.html",{loader:()=>s.e(9381).then(s.bind(s,7491)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.03,words:10},t:"session",i:"gears",O:14,y:"a"}}],["/posts/moreThanCode/network/tcp.html",{loader:()=>s.e(3110).then(s.bind(s,1205)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.04,words:12},t:"TCP协议",i:"gears",O:16,y:"a"}}],["/posts/moreThanCode/network/webSocket.html",{loader:()=>s.e(662).then(s.bind(s,1722)),meta:{d:1739717238e3,c:["网络"],e:"<p>8888</p>\n",r:{minutes:.03,words:10},t:"WebSocket",i:"gears",O:24,y:"a"}}],["/404.html",{loader:()=>s.e(7490).then(s.bind(s,1489)),meta:{t:""}}],["/category/",{loader:()=>s.e(3583).then(s.bind(s,3233)),meta:{t:"分类",I:!1}}],["/category/javascript/",{loader:()=>s.e(1791).then(s.bind(s,438)),meta:{t:"JavaScript 分类",I:!1}}],["/category/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/",{loader:()=>s.e(5542).then(s.bind(s,6544)),meta:{t:"前端工程化 分类",I:!1}}],["/category/%E6%B5%8F%E8%A7%88%E5%99%A8/",{loader:()=>s.e(8649).then(s.bind(s,5875)),meta:{t:"浏览器 分类",I:!1}}],["/category/%E7%BD%91%E7%BB%9C/",{loader:()=>s.e(953).then(s.bind(s,7796)),meta:{t:"网络 分类",I:!1}}],["/tag/",{loader:()=>s.e(1797).then(s.bind(s,951)),meta:{t:"标签",I:!1}}],["/article/",{loader:()=>s.e(7511).then(s.bind(s,2772)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>s.e(7199).then(s.bind(s,353)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>s.e(3083).then(s.bind(s,4695)),meta:{t:"时间轴",I:!1}}]])},8761:(e,i,s)=>{s.d(i,{U:()=>t});const t=JSON.parse('{"base":"/blog/","lang":"en-US","title":"","description":"","head":[["link",{"rel":"icon","href":"/blog/favicon.ico"}]],"locales":{"/":{"lang":"zh-CN","title":"大喵喜的技术杂货铺","description":"你发现了一块大喵喜的自留地！"}}}')},6653:(e,i,s)=>{s.d(i,{K:()=>t});const t=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":{"tokens":["$2a$10$1N63STXxzeacnY.tKweZeuU.CzdhPdxqDCSaj32o8urTdRohVS396"],"hint":"Password: 1234"},"/zh/demo/encrypt.html":{"tokens":["$2a$10$6I.C.7BfpZkT68wLgQSqRuxeSFrYDc3hBVhLhp0ZmD.KzlZMZUV2W"],"hint":"Password: 1234"}}},"author":{"name":"Jianshu.Shi","url":"https://mister-hope.com"},"logo":"/logo.svg","repo":"vuepress-theme-hope/vuepress-theme-hope","docsDir":"src","blog":{"medias":{"Baidu":"https://example.com","BiliBili":"https://example.com","Bitbucket":"https://example.com","Dingding":"https://example.com","Discord":"https://example.com","Dribbble":"https://example.com","Email":"mailto:info@example.com","Evernote":"https://example.com","Facebook":"https://example.com","Flipboard":"https://example.com","Gitee":"https://example.com","GitHub":"https://example.com","Gitlab":"https://example.com","Gmail":"mailto:info@example.com","Instagram":"https://example.com","Lark":"https://example.com","Lines":"https://example.com","Linkedin":"https://example.com","Pinterest":"https://example.com","Pocket":"https://example.com","QQ":"https://example.com","Qzone":"https://example.com","Reddit":"https://example.com","Rss":"https://example.com","Steam":"https://example.com","Twitter":"https://example.com","Wechat":"https://example.com","Weibo":"https://example.com","Whatsapp":"https://example.com","Youtube":"https://example.com","Zhihu":"https://example.com","VuePressThemeHope":{"icon":"https://theme-hope-assets.vuejs.press/logo.svg","link":"https://theme-hope.vuejs.press"}}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/",{"text":"代码不止","prefix":"/posts/codingMore/","icon":"proicons:code","children":[{"text":"JavaScript","icon":"https://www.runoob.com/wp-content/uploads/2013/07/js-logo.png","link":"JavaScript/"},{"text":"前端工程化","link":"frontendEngineering/","icon":"eos-icons:organisms"}]},{"text":"不止代码","prefix":"/posts/moreThanCode/","icon":"eos-icons:neural-network","children":[{"text":"浏览器","link":"browser/","icon":"eos-icons:application-window-outlined"},{"text":"网络","link":"network/","icon":"line-md:spotify"},{"text":"设计模式","link":"designMode/","icon":"mdi:lightbulb-on-10"}]}],"sidebar":{"/":["",{"text":"代码不止","icon":"proicons:code","prefix":"posts/codingMore/","collapsible":true,"children":[{"text":"JavaScript","prefix":"JavaScript","icon":"https://www.runoob.com/wp-content/uploads/2013/07/js-logo.png","collapsible":true,"children":"structure"},{"text":"前端工程化","prefix":"frontendEngineering","icon":"eos-icons:organisms","collapsible":true,"children":"structure"}]},{"text":"不止代码","prefix":"posts/moreThanCode/","icon":"eos-icons:neural-network","collapsible":true,"children":[{"text":"浏览器","prefix":"browser","icon":"eos-icons:application-window-outlined","collapsible":true,"children":"structure"},{"text":"网络","prefix":"network","icon":"line-md:spotify","collapsible":true,"children":"structure"},{"text":"设计模式","prefix":"designMode","icon":"mdi:lightbulb-on-10","collapsible":true,"children":"structure"}]}]},"footer":"默认页脚","displayFooter":true,"blog":{"name":"Jianshu.Shi (大喵喜)","avatar":"logo.svg","description":"高级开发工程师，工程硕士","intro":"/zh/intro.html"},"editLink":false}}}')},4923:(e,i,s)=>{},8123:(e,i,s)=>{s.d(i,{v:()=>t});const t={"/posts/codingMore/JavaScript":["/posts/codingMore/JavaScript/let_var_const.html","valueAndReference","packagesType","typeConversion","operator","prototype","ExecutionStackAndContext","scopeAndScopeChain","this","DOMEventPropagationMechanism","preventDefaultBehaviors","floatingPrecisionProblem","strictMode","/posts/codingMore/JavaScript/GC_MemoryLeak.html","eventLoop","closure","/posts/codingMore/JavaScript/class_structure.html","promise","debounceAndThrottle"],"/posts/codingMore/frontendEngineering":["webpack"],"/posts/moreThanCode/browser":["browserRenderFlow","resourceKeywords","componentsOfBrowser","dataStorage","IndexedDB","fileApis","browserCache","communicationBetweenTabs","webWorker"],"/posts/moreThanCode/network":["FiveLayerNetworkModel","requestMethods","cookie","/posts/moreThanCode/network/cookie_storage.html","encrypt","JWT","sameOriginPolicy","crossDomain-proxy","crossDomain-CORS","crossDomain-JSONP","fileUpload","afterEnterUrl","fileDownload","session","negotiatedCache","tcp","CSRFAttack","XSSAttack","networkPerformanceOptimization","breakpointResume","DNS","/posts/moreThanCode/network/SSL_TLS_HTTPS.html","HTTPVersionsDiffer","webSocket"],"/posts/moreThanCode/designMode":["FiveLayerNetworkModel"]}},2878:(e,i,s)=>{s.d(i,{P:()=>t});const t={Baidu:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon baidu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2319DC"/><path fill="#FFF" d="M320 528c65-14 56-92 54-109-3-26-34-72-76-68-52 4-60 81-60 81-7 35 17 110 82 96m121-131c36 0 65-41 65-92 0-52-29-93-65-93s-65 41-65 93c0 51 29 92 65 92m155 7c48 6 79-46 86-85 6-38-25-84-59-91-35-8-77 46-81 82-5 44 6 87 54 94m191 65c0-19-15-75-73-75-57 0-65 53-65 91 0 35 3 85 75 84 71-2 63-81 63-100m-73 163s-74-57-118-119c-59-92-142-55-170-8s-72 76-78 84-90 53-71 135c18 83 83 81 83 81s49 5 104-7c56-13 104 3 104 3s131 43 166-41c36-84-20-128-20-128"/><path fill="#2319DC" d="M453 552v56h-45s-46 3-61 54c-6 35 4 55 6 59s17 29 53 37h85V553zm-1 172h-34s-24-1-31-29c-4-12 0-26 2-31 2-6 10-19 26-23h37zm60-111v107s2 27 39 37h98V613h-42v108h-40s-13-2-16-12v-97z"/></svg>',BiliBili:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon bilibili-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1296db"/><path fill="#fff" d="M745.363 177.725a47 47 0 0 1 0 66.3L702.5 286.85h44A141 141 0 0 1 887 427.512v281.25a141 141 0 0 1-141 140.626H277.25A141 141 0 0 1 137 708.763v-281.25a141 141 0 0 1 141-141h43.725l-42.788-42.825a47 47 0 1 1 66.263-66.3l99.45 99.45c2.963 2.962 5.438 6.187 7.425 9.637h120.487c1.988-3.45 4.5-6.75 7.463-9.675l99.413-99.45a47 47 0 0 1 66.3 0zm1.012 203.25h-468.75a47 47 0 0 0-46.763 43.388l-.112 3.525v281.25c0 24.712 19.125 44.962 43.387 46.724l3.488.15h468.75a47 47 0 0 0 46.763-43.387l.112-3.487v-281.25c0-26-21-47-47-46.876zm-375 93.75c26 0 47 21 47 47v47a47 47 0 1 1-93.75 0V521.6c0-26 21-47 47-47zm281.25 0c26 0 47 21 47 47v47a47 47 0 1 1-93.75 0V521.6c0-26 21-47 47-47z"/></svg>',Bitbucket:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon bitbucket-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#205081"/><path fill="#fff" d="M512 191.32v.01-.01c-152.76 0-277.805 41.114-277.805 92.166 0 13.443 33.353 206.247 46.577 282.708 5.932 34.285 94.508 84.563 231.126 84.563l.102-.407v.407c137.484 0 225.26-50.278 231.192-84.578 13.23-76.457 46.592-269 46.592-282.698.005-51.047-125-92.165-277.784-92.165zm0 397.493c-48.771 0-88.31-39.545-88.31-88.31 0-48.772 39.539-88.306 88.31-88.306s88.31 39.534 88.31 88.31c0 48.766-39.539 88.306-88.31 88.306zm-.05-276.842c-98.256-.153-177.885-17.232-177.855-38.14.036-20.912 79.72-37.731 177.976-37.568 98.256.153 177.884 17.22 177.849 38.139 0 20.908-79.705 37.716-177.966 37.564z"/><path fill="#fff" d="M711.668 642.814c-4.227 0-7.608 2.994-7.608 2.994S635.65 699.987 512 699.987s-192.06-54.18-192.06-54.18-3.386-2.988-7.608-2.988c-5.04 0-9.827 3.391-9.827 10.871 0 .79.076 1.579.224 2.353 10.617 56.826 18.382 97.206 19.736 103.347 9.268 41.805 91.045 73.411 189.525 73.411 98.49 0 180.267-31.606 189.535-73.411 1.364-6.136 9.114-46.49 19.736-103.317.143-.779.224-1.578.224-2.368 0-7.485-4.786-10.881-9.827-10.881zM467.659 500.477a44 44 0 1 0 88.51 0 44 44 0 1 0-88.51 0z"/></svg>',Dingding:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon dingding-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1C9DF7"/><path fill="#fff" d="M760.551 442c0 5-5 13-7.767 20.713-23.302 49.192-82.85 145-82.85 145l-18.124 31.069h85.44L576.727 853.758l36.247-145h-67.316l23.302-95.796c-18.124 5-41.426 10-67.316 18.124 0 0-36.247 20.712-101-38.837 0 0-44.015-38.836-18.124-49.192 10-5 54.37-10 88.029-13 44.014-5.179 72.494-10 72.494-10s-139.81 2.59-173.468-2.589c-33.658-5-75.083-59.549-82.85-108.741 0 0-12.946-25.89 28.48-13 44.013 13 222.66 49.192 222.66 49.192s-235.606-72.494-251.14-90.618c-15.535-18.123-46.604-95.796-41.426-145 0 0 2.59-13 13-7.767 0 0 173.469 80.261 292.566 121.686 119 41.426 222.66 64.727 209.715 119z"/></svg>',Discord:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon discord-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2DAAE1"/><path fill="#fff" d="m422.935 240.147 5.851 8.052c-113.039 34.253-165.649 84.585-165.649 84.585s13.645-8.052 37.024-18.123c66.28-30.215 118.865-38.267 142.244-40.286 3.91 0 7.819-1.994 9.76-1.994 38.966-6.058 81.816-6.058 126.658-2.02 58.462 8.053 122.749 24.157 187.061 62.423 0 0-48.7-48.338-155.862-82.566l7.767-10.071h1.968c13.308.233 91.757 4.246 173.416 68.481 0 0 89.634 169.144 89.634 376.555 1.942-2.02-50.668 92.637-189.003 96.65 0 0-23.405-28.194-40.933-52.35 81.84-24.157 113.013-76.534 113.013-76.534a313.796 313.796 0 0 1-72.106 38.267c-31.172 14.11-60.403 22.162-89.633 28.22-60.404 12.066-114.955 8.027-161.74 0a636.81 636.81 0 0 1-91.576-28.22c-13.644-6.033-29.23-12.065-44.817-22.137-1.941-2.02-3.883-2.02-5.85-4.039-1.943 0-1.943-2.02-1.943-2.02-11.702-6.032-17.528-10.07-17.528-10.07s29.23 52.376 109.104 76.532c-19.47 24.157-40.907 54.371-40.907 54.371-138.36-4.039-190.97-98.67-190.97-98.67 0-207.41 89.633-376.555 89.633-376.555 89.634-70.5 175.384-68.481 175.384-68.481zm213.961 233.017c-35.315 0-65 34.512-65 78s29.412 78 65 78 65-34.512 65-78-29.412-78-65-78zm-233.016 0c-35.315 0-65 34.512-65 78s29.412 78 65 78 64.726-34.512 64.726-78-29.411-78-64.726-78z"/></svg>',Dribbble:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon dribbble-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DC4373"/><path fill="#C13366" d="M716.668 302.752c-13.332 5.154-28.61 3.676-35.726-1.068-86.196-48.27-179.286-62.06-265.482-37.926C292.074 300.212 241.674 437.028 242 564.746c22.622 42.136 52.558 105.234 61.854 153.104l298.24 298.246c210.532-37.376 376.584-203.408 413.986-413.928L716.668 302.752z"/><path fill="#F0F1F1" d="M511.994 219.308c-161.592 0-293.058 131.31-293.058 292.696s131.466 292.684 293.058 292.684c161.598 0 293.07-131.292 293.07-292.684 0-161.386-131.472-292.696-293.07-292.696zm192.842 138.148c33.43 41.432 53.744 93.756 54.682 150.772-11.122-2.282-58.23-11.068-114.526-11.068-18.164 0-37.282.91-56.448 3.278a822.854 822.854 0 0 0-4.938-11.812c-4.972-11.692-10.326-23.29-15.874-34.72 86.642-35.696 128.436-85.238 137.104-96.45zm-192.842-92.33c62.446 0 119.528 23.2 163.126 61.412-6.902 9.416-44.332 56.202-127.876 87.768-38.67-70.688-80.996-129.22-91.07-142.812a247.13 247.13 0 0 1 55.82-6.368zm-106.352 23.99c8.536 11.758 50.928 70.918 90.592 141.036-106.448 27.982-200.976 29.806-223.79 29.806h-2.424c16.39-75.534 67.424-138.298 135.622-170.842zM264.402 512.39c0-2.038.034-4.076.1-6.102 1.48.018 3.666.018 6.5.018 30.726 0 137.382-2.538 247.288-35.154a828.402 828.402 0 0 1 18.928 39.526 232.24 232.24 0 0 0-8.234 2.482C405.236 553.126 337.216 658.936 326.75 676.232c-38.778-43.696-62.348-101.058-62.348-163.842zm247.592 247.246c-56.786 0-109.192-19.232-151.01-51.48 7.074-13.868 58.412-106.3 194.026-153.5a1.806 1.806 0 0 1 .272-.09c34.006 88.53 48.408 162.834 52.358 185.862-29.432 12.374-61.752 19.208-95.646 19.208zm140.236-43.584c-3.32-19.052-16.66-88.688-47.452-173.618 17.27-2.686 34.072-3.748 49.828-3.748 51.748 0 92.23 11.33 101.634 14.204-11.182 67.444-49.794 125.808-104.01 163.162z"/><path fill="#D1D1D1" d="M511.994 219.308c-.382 0-.758.028-1.142.028v45.804c.38 0 .758-.018 1.142-.018 62.446 0 119.528 23.2 163.126 61.412-6.902 9.416-44.332 56.202-127.876 87.768-12.14-22.194-24.642-43.188-36.392-61.968V473.29c2.476-.706 4.954-1.41 7.434-2.144a828.402 828.402 0 0 1 18.928 39.526c-2.776.796-5.514 1.592-8.234 2.478a323.314 323.314 0 0 0-18.128 6.52v53.228a418.976 418.976 0 0 1 44.428-18.332c34.006 88.53 48.408 162.834 52.358 185.862-29.428 12.374-61.746 19.208-95.646 19.208-.382 0-.758-.024-1.142-.024v45.05c.382 0 .758.028 1.142.028 161.598 0 293.07-131.292 293.07-292.684.002-161.388-131.47-292.698-293.068-292.698zm71.614 269.316c-4.972-11.692-10.326-23.29-15.874-34.72 86.64-35.696 128.434-85.236 137.102-96.45 33.43 41.432 53.748 93.756 54.682 150.77-11.122-2.282-58.23-11.068-114.522-11.068-18.164 0-37.282.914-56.448 3.278-1.624-3.932-3.24-7.852-4.94-11.81zm68.622 227.428c-3.32-19.052-16.66-88.688-47.452-173.618 17.27-2.686 34.072-3.748 49.828-3.748 51.748 0 92.23 11.33 101.634 14.204-11.182 67.444-49.794 125.808-104.01 163.162z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>',Evernote:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon evernote-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#14cc45"/><path fill="#595757" d="M347.671 193.259v87.51h-87.51z"/><path fill="#595757" d="M788.047 323.645s3.65-77.491-73.84-103.02c0 0-89.479-12.867-151.41-11.91 0 0-8.595-53.23-103.33-53.23 0 0-89.556-1.244-89.892 70.526v61.671s2.848 14.991-27.833 14.991h-81.581s-34.28 5.282-34.28 72.934c0 0 3.133 120.082 41.322 200.24 0 0 9.398 34.667 58.228 46.577 0 0 95.822 25.477 123.991 21.722 0 0 58.228 22.137 62.008-111.874 0 0 3.755-19.935 6.266 11.392 0 0-1.89 68.948 57.607 72.702 0 0 45.723 12.557 73.892 10.045 0 0 37.568 2.15 37.568 64.158 0 0 13.152 71.665-34.435 71.665h-65.763s-18.149 4.428-18.149-21.877c0 0-4.997-21.878 26.305-21.878h15.534v-43.756h-43.082s-66.332-6.317-66.332 50.047v75.135s9.347 49.866 66.332 49.866h121.273s48.441.44 76.61-90.359c0-.078 48.52-182.323 22.991-435.767zM625.272 486.523c0-21.877 18.02-51.16 39.432-51.16s36.48 36.118 36.48 58.022c-28.79-7.897-45.827-9.606-75.912-6.862z"/></svg>',Facebook:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon facebook-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#3c599b"/><path fill="#fff" d="M353.357 400.378h68.151v-66.235c0-29.206.737-74.247 21.952-102.142 22.348-29.542 53.026-49.622 105.794-49.622 85.976 0 122.18 12.263 122.18 12.263L654.4 295.61s-28.407-8.213-54.903-8.213c-26.512 0-50.243 9.5-50.243 35.995v76.988h108.687L650.352 499H549.254v342.602H421.508V499h-68.15v-98.622z"/></svg>',Flipboard:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon flipboard-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#e12828"/><path fill="#fff" d="M263.487 261.893H445.92V809.17H263.487V261.893z"/><path fill="#fce9e9" d="M445.92 261.893h364.842v182.435H445.92V261.893z"/><path fill="#f6bebe" d="M445.92 444.328h182.435v182.435H445.92V444.328z"/></svg>',Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Gitlab:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gitlab-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#E8F0FF"/><path fill="#E24329" d="m512 808 110-340H402z"/><path fill="#FC6D26" d="M512 808 402 468H247z"/><path fill="#E24329" d="M247 468h155l-67-204c-4-11-19-11-22 0z"/><path fill="#FC6D26" d="m512 808 110-340h156z"/><path fill="#FCA326" d="m778 468 33 104c3 10-1 19-9 25L512 808z"/><path fill="#E24329" d="M778 468H622l68-204c3-11 18-11 21 0z"/><path fill="#FCA326" d="M512 808 222 597c-8-5-12-16-9-25l34-104z"/></svg>',Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>',Instagram:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon instagram-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#181818"/><path fill="#fff" d="M512 348.16c-88.222 0-163.84 71.417-163.84 163.84 0 88.222 71.417 163.84 163.84 163.84 88.222 0 163.84-71.417 163.84-163.84 0-88.222-75.618-163.84-163.84-163.84zm0 268.866c-58.814 0-105.026-46.212-105.026-105.026S453.186 406.974 512 406.974 617 453.186 617 512s-46.186 105-105 105zM680.041 306.15c-21 0-37.81 16.804-37.81 37.809s16.805 37.81 37.81 37.81 37.81-16.805 37.81-37.81-16.805-37.81-37.81-37.81z"/><path fill="#FFF" d="M659.036 196.923h-16.804c-50.413-4.2-210.051-4.2-260.464 0-96.623-4.2-180.644 71.418-184.845 168.041v16.804c-4.2 50.413-4.2 210.051 0 260.464-4.2 96.623 71.418 180.644 168.041 184.845h16.804c50.413 4.2 210.051 4.2 260.464 0 96.623 4.2 180.644-71.418 184.845-168.041V381.768c4.2-96.623-71.418-180.644-168.041-184.845zM759.86 696.845c-12.604 29.407-33.609 50.412-58.815 58.814-121.83 16.805-247.86 16.805-373.891 0-29.407-12.603-50.412-33.608-58.814-58.814-12.604-63.015-16.805-126-12.604-184.845-4.2-63.015 0-126 12.604-184.845 12.603-29.407 33.608-50.412 58.814-58.814 121.83-16.805 247.86-16.805 373.891 0 29.407 12.603 50.412 33.608 58.815 58.814 12.603 63.015 16.804 126 12.603 184.845 4.2 63.015 0 126-12.603 184.845z"/></svg>',Lark:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon lark-icon" viewBox="0 0 700 700"><path fill="#fdfdfd" d="M0 350C0 156.7 156.7 0 350 0s350 156.7 350 350-156.7 350-350 350S0 543.3 0 350Z"/><path fill="#326ffd" d="M94.683 255.472c-1.188.99-3.547 1.424-3.565 2.971-.892 77.877-1.647 155.803.853 233.645.135 4.185 3.811 7.709 6.987 10.437 8.041 6.906 16.845 13.026 26.179 18.048 15.915 8.564 32.118 16.959 49.299 22.567 22.582 7.37 45.902 12.712 69.402 16.176 16.45 2.425 33.243 1.892 49.863 1.404 85.699-2.518 170.495-42.242 226.974-107.047 13.128-15.062 24.349-31.701 35.801-48.072.482-.689-.29-1.655-.435-2.483-11.645 12.501-23.322 25.66-38.015 34.376-38.027 22.561-80.103 18.178-120.414 4.963-24.658-8.083-49.594-15.711-73.208-26.468-32.043-14.597-63.264-31.14-93.363-49.411-50.119-30.424-92.859-71.794-136.358-111.106Z"/><path fill="#00d5b8" d="M373.34 355.289c22.389-21.264 43.857-43.542 67.167-63.793 15.84-13.761 40.614-23.584 58.792-32.162-13.932-44.24-30.142-84.389-60.513-120.46-3.54-4.204-7.91-9.366-13.399-9.603-81.245-3.519-162.641-2.296-243.958-1.541-1.72.016-3.262 2.127-3.451 3.836-.209 1.893 1.026 3.902 2.457 5.159 21.134 18.566 43.735 35.416 64.865 53.985 52.859 46.45 91.839 105.023 128.04 164.579Z"/><path fill="#133c99" d="M302.636 406.089c63.531 28.909 161.471 77.441 225.923 24.345 10.473-8.628 22.415-16.393 29.694-27.844 19.077-30.011 31.761-63.645 48.432-95.056 8.019-15.112 17.249-23.738 28.765-36.905-17.982-10.513-43.141-16.899-63.455-18.431-44.467-3.354-94.982 6.952-129.899 36.91-29.717 25.495-55.957 54.804-84.849 81.23-16.051 14.681-36.135 24.874-54.611 35.751Z"/></svg>',Lines:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon lines-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#00C300"/><path fill="#fff" d="M861.44 469.76C861.44 313.28 704 186.08 512 186.08s-349.44 127.2-349.44 283.68C162.56 608 287 727.52 455 752c11.52 2.4 27 7.68 30.72 17.28a71.04 71.04 0 0 1 0 31.68l-5.28 29.76c0 8.64-7.2 34.56 30.24 19a1104 1104 0 0 0 274.56-202.56 251.52 251.52 0 0 0 75-175zM375.2 562.88h-69.12a17.76 17.76 0 0 1-18-18v-139.2a17.76 17.76 0 0 1 18-18 18 18 0 0 1 18 18v120.48h51a19 19 0 0 1 18 19 18 18 0 0 1-18 18zm72-18a18 18 0 1 1-36.48 0v-139.2a18 18 0 0 1 36.48 0zm167.04 0a18 18 0 0 1-12.48 17.28H596a18 18 0 0 1-14.4-7.2l-69.6-96v85.92a18 18 0 1 1-36.48 0v-139.2A18 18 0 0 1 488 388.16h5.76a18 18 0 0 1 14.4 7.2l71.52 96v-85.92a18 18 0 1 1 36.48 0zm112.32-87.84a18 18 0 0 1 18 18 17.76 17.76 0 0 1-18 18h-51v32.64h51a19 19 0 0 1 18 19 18 18 0 0 1-18 18H656a18 18 0 0 1-18-18v-139.2a18 18 0 0 1 18-18.28h69.12a18 18 0 0 1 18 18 18 18 0 0 1-18 19h-49.44v32.64zm0 0"/></svg>',Linkedin:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon linkedin-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#4376B1"/><path fill="#F1F2F2" d="M838.301 555.94v225.157h-130.54V571.03c0-52.746-18.847-88.766-66.112-88.766-36.069 0-57.496 24.25-66.959 47.732-3.436 8.391-4.322 20.045-4.322 31.814v219.277h-130.55s1.752-355.784 0-392.613h130.56v55.637c-.263.438-.633.867-.867 1.285h.866v-1.285c17.349-26.694 48.287-64.856 117.651-64.856 85.884 0 150.273 56.114 150.273 176.685zm-535.05-356.72c-44.655 0-73.87 29.314-73.87 67.826 0 37.695 28.368 67.855 72.157 67.855h.847c45.532 0 73.842-30.16 73.842-67.855-.866-38.512-28.31-67.825-72.975-67.825zM237.14 781.098h130.5V388.474h-130.5v392.623z"/></svg>',Pinterest:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon pinterest-icon" viewBox="0 0 1024 1024"><path fill="#fff" d="M512 1023.147c282.773 0 512-228.288 512-509.888 0-281.622-229.227-509.91-512-509.91S0 231.637 0 513.26c0 281.6 229.227 509.888 512 509.888z"/><path fill="#CA242D" d="M512 3.35C229.248 3.35 0 231.658 0 513.258c0 216.128 134.848 400.789 325.312 475.05-4.63-40.277-8.427-102.378 1.685-146.453 9.28-39.872 59.84-253.483 59.84-253.483s-15.168-30.634-15.168-75.541c0-70.933 41.302-123.797 92.715-123.797 43.819 0 64.896 32.725 64.896 71.765 0 43.627-27.819 109.099-42.56 169.963-12.224 50.773 25.707 92.33 75.84 92.33 91.03 0 160.981-95.68 160.981-233.344 0-122.133-88.064-207.317-214.058-207.317-145.814 0-231.36 108.693-231.36 221.163 0 43.648 16.853 90.645 37.93 116.245a15.19 15.19 0 0 1 3.371 14.699c-3.797 15.936-12.65 50.773-14.336 57.92-2.09 9.216-7.573 11.328-17.28 6.698-64.043-29.781-104.085-122.538-104.085-197.653 0-160.747 117.162-308.459 338.389-308.459 177.408 0 315.627 125.888 315.627 294.614 0 175.829-111.254 317.269-265.472 317.269-51.84 0-100.715-26.859-117.163-58.752l-32.021 121.28c-11.371 44.48-42.56 99.883-63.638 133.867A516.01 516.01 0 0 0 511.168 1024c282.752 0 512-228.31 512-509.91C1024 231.66 794.752 3.35 512 3.35z"/></svg>',Pocket:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon pocket-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#EE4056"/><path fill="#fff" d="M716.52 309.066c12.549 0 23.172 4.394 31.87 13.182 8.697 8.788 13.023 19.48 13.023 32.006v150.4c0 33.975-6.568 66.41-19.705 97.307-13.138 30.918-30.76 57.487-52.89 79.685-22.106 22.197-48.562 39.864-79.367 52.888-30.804 13.024-63.081 19.547-96.876 19.547a246.897 246.897 0 0 1-97.215-19.547c-30.805-13.046-57.306-30.668-79.504-52.888-22.198-22.198-39.865-48.767-53.003-79.663a246.311 246.311 0 0 1-19.728-97.33V354.255c0-12.321 4.44-22.945 13.319-31.847a43.489 43.489 0 0 1 31.87-13.341H716.52zM512.574 617.339c9.06 0 16.989-3.216 23.738-9.581l117.103-112.415a32.622 32.622 0 0 0 10.691-24.62c0-9.469-3.33-17.533-9.966-24.191a32.958 32.958 0 0 0-24.237-10.012c-9.06 0-16.988 3.171-23.737 9.56l-93.547 89.808-93.614-89.809a33.185 33.185 0 0 0-23.443-9.559c-9.468 0-17.532 3.33-24.19 9.967-6.66 6.682-9.967 14.722-9.967 24.236 0 9.83 3.443 18.03 10.419 24.599l117.33 112.413c6.342 6.342 14.179 9.56 23.466 9.56l-.046.044z"/></svg>',QQ:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon qq-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#5eaade"/><path fill="#fff" d="M805.25 585.542c-15-48.188-32.25-88.688-58.781-154.97 4.125-174.093-68.25-314.905-234.938-314.905-168.562 0-239.344 143.625-234.844 314.906-26.625 66.375-43.78 106.594-58.78 154.969-31.876 102.656-21.563 145.125-13.688 146.062 16.875 2.063 65.718-77.25 65.718-77.25 0 45.938 23.625 105.844 74.813 149.063-24.75 7.593-80.344 28.03-67.125 50.437 10.688 18.094 183.938 11.531 233.906 5.906 49.969 5.625 223.219 12.188 233.906-5.906 13.22-22.312-42.468-42.844-67.125-50.437 51.188-43.313 74.813-103.22 74.813-149.063 0 0 48.844 79.313 65.719 77.25 7.969-1.031 18.281-43.5-13.594-146.062z"/></svg>',Qzone:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon qzone-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#0985DD"/><path fill="#fff" d="M722.38 595.24c22.486-4.056 11.345-12.424 2.156-11.346-16.685 1.72-40.43 1.925-66.562 1.284l3.029 17.79a656.641 656.641 0 0 0 61.402-7.702l-.025-.026zm68.95-174.915a5.287 5.287 0 0 0-4.493-3.645L598.42 389.29l-84.326-170.628c-1.925-3.594-7.958-3.594-9.857 0L419.885 389.29l-188.417 27.39a5.338 5.338 0 0 0-4.466 3.645 5.493 5.493 0 0 0 1.488 5.57l136.36 132.92-32.088 187.519a5.263 5.263 0 0 0 2.13 5.39c1.695 1.284 3.851 1.463 5.776.385l168.651-88.407 168.524 88.638 2.567.642 3.209-1.079c1.72-1.283 2.566-3.208 2.13-5.34l-24.591-143.648c-27.21 2.156-54.37 3.183-76.42 3.183-77.267 0-135.075-3.645-135.948-3.645a16.48 16.48 0 0 1-14.785-11.757 16.247 16.247 0 0 1 5.981-17.764l155.431-113.05c-99.959-7.906-183.873-6.418-184.721-6.418-13.502.642-25.67-3.645.642-14.375 4.518-1.694 109.2-23.72 230.362-7.445 6.673.847 12.013 5.75 13.733 12.194a16.61 16.61 0 0 1-6.263 17.302L497.204 571.598c27.826 5.802 100.37 12.014 160.745 13.502l-4.519-26.312 136.308-132.97a5.338 5.338 0 0 0 1.54-5.544l.051.051z"/></svg>',Reddit:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon reddit-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#ff4501"/><path fill="#fff" d="M617.199 680.55c5.666 5.974 5.666 11.742 0 17.34-21.845 23.143-56.9 34.714-105.199 34.714s-83.354-11.571-105.199-34.714c-5.666-5.598-5.666-11.366 0-17.34a10.445 10.445 0 0 1 7.919-3.379c3.174 0 5.803 1.127 7.919 3.38 16.93 18.295 46.728 27.408 89.361 27.408 42.325 0 72.09-9.113 89.361-27.409a10.445 10.445 0 0 1 7.919-3.379c3.174 0 5.803 1.127 7.919 3.38zm-176.06-136.635c9.182 9.694 13.756 21.47 13.756 35.294 0 13.79-4.574 25.565-13.756 35.26a44.134 44.134 0 0 1-33.28 14.54c-13.073 0-24.234-4.847-33.587-14.54a49.015 49.015 0 0 1-13.995-35.26c0-14.2 4.642-26.147 13.995-35.84 9.353-9.728 20.514-14.575 33.587-14.575 13.04 0 24.132 5.051 33.28 15.12zm222.584 35.294c0 13.79-4.642 25.565-13.995 35.26a44.954 44.954 0 0 1-33.587 14.54c-13.04 0-24.132-4.847-33.28-14.54a49.493 49.493 0 0 1-13.756-35.26c0-13.824 4.574-25.669 13.756-35.567 9.148-9.9 20.24-14.848 33.28-14.848 13.073 0 24.234 4.847 33.587 14.575 9.353 9.693 13.995 21.64 13.995 35.84zM796.433 512c0-18.295-6.144-33.963-18.5-47.036a59.494 59.494 0 0 0-44.92-19.592c-17.647 0-32.768 6.724-45.465 20.138-45.841-33.587-100.66-51.507-164.455-53.725l33.314-158.482 105.746 25.19c0 13.825 4.573 25.6 13.755 35.295 9.148 9.694 20.241 14.54 33.314 14.54 13.04 0 24.235-4.915 33.553-14.813 9.353-9.899 13.995-21.743 13.995-35.567s-4.642-25.669-13.995-35.567a44.578 44.578 0 0 0-33.553-14.814c-19.046 0-33.143 9.318-42.325 27.99L550.06 228.112c-6.69-1.877-11.094 1.126-13.21 8.977l-36.488 174.695c-63.454 2.594-117.897 20.718-163.363 54.272a59.187 59.187 0 0 0-46.011-20.685c-17.613 0-32.598 6.52-44.92 19.592a66.082 66.082 0 0 0-18.5 47.036c0 13.073 3.243 25.02 9.762 35.84 6.52 10.82 15.258 19.046 26.18 24.644a152.303 152.303 0 0 0-3.174 31.335c0 53.009 24.678 98.372 74.035 136.09 49.323 37.682 108.715 56.524 178.176 56.524 69.769 0 129.365-18.842 178.688-56.525 49.357-37.717 74.001-83.08 74.001-136.09 0-11.946-1.229-22.561-3.686-31.914 10.581-5.598 19.046-13.722 25.395-24.337 6.315-10.65 9.49-22.528 9.49-35.567z"/></svg>',Rss:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon rss-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#FD9B00"/><path fill="#fff" d="M687.981 740.39c0-225.92-183.617-409.777-409.21-409.777v-97.205c279.353 0 506.617 227.506 506.617 506.98H687.98zm-74.841 0h-97.538c0-63.567-24.688-123.245-69.43-167.993-44.762-44.856-104.24-69.556-167.54-69.556v-97.176c184.44 0 334.508 150.046 334.508 334.725zM346.038 605.166c37.35 0 67.514 30.357 67.514 67.39 0 37.146-30.163 67.177-67.514 67.177-37.219 0-67.458-30.03-67.458-67.176 0-37.034 30.24-67.391 67.458-67.391z"/></svg>',Steam:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon steam-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="488" fill="#fff"/><path fill="#13227a" d="M1008 512c0 274-222.4 496-496.8 496-227.6 0-419.2-152.6-478-360.8l190.4 78.6c12.8 64.2 69.8 112.8 137.8 112.8 78.4 0 143.8-64.8 140.4-147l169-120.4c104.2 2.6 191.6-81.8 191.6-187 0-103.2-84-187-187.4-187s-187.4 84-187.4 187v2.4L369.2 558c-31-1.8-61.4 6.8-87 24.2L16 472.2C36.4 216.8 250.2 16 511.2 16 785.6 16 1008 238 1008 512zM327.4 768.6l-61-25.2a105.58 105.58 0 0 0 54.4 51.6c53.8 22.4 115.6-3.2 138-56.8 10.8-26 11-54.6.2-80.6-10.8-26-31-46.4-57-57.2-25.8-10.8-53.4-10.4-77.8-1.2l63 26c39.6 16.4 58.4 61.8 41.8 101.4-16.6 39.8-62 58.4-101.6 42zM675 508.8c-68.8 0-124.8-56-124.8-124.6s56-124.6 124.8-124.6 124.8 56 124.8 124.6S744 508.8 675 508.8zm.2-31.2c51.8 0 93.8-42 93.8-93.6 0-51.8-42-93.6-93.8-93.6s-93.8 42-93.8 93.6c.2 51.6 42.2 93.6 93.8 93.6z"/></svg>',Twitter:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon twitter-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512"/><path fill="#FFF" d="m560 473 186-216h-44L540 445 411 257H262l195 284-195 226h44l171-198 136 198h149zM322 290h68l312 445h-68z"/></svg>',Wechat:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon wechat-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2AAE67"/><path fill="#FFF" d="M501 417c-14 0-25-12-25-26s11-26 25-26 26 12 26 26-12 26-26 26m-144 0c-15 0-26-12-26-26s11-26 26-26 25 12 25 26-11 26-25 26m72-150c-120 0-217 82-217 183 0 55 29 104 75 138a15 15 0 0 1 6 11l-1 5-9 37-2 5c0 4 4 8 8 8l4-2 47-27c4-3 8-4 12-4l6 1a255 255 0 0 0 83 10c-5-14-7-29-7-45 0-92 88-166 197-166h9c-16-87-103-154-211-154"/><path fill="#FFF" d="M692 561c-13 0-23-10-23-23 0-12 10-22 23-22 12 0 22 10 22 22 0 13-10 23-22 23m-121 0c-12 0-23-10-23-23 0-12 11-22 23-22s23 10 23 22c0 13-11 23-23 23m179 141c38-28 62-69 62-115 0-84-81-152-181-152s-180 68-180 152 80 152 180 152a212 212 0 0 0 65-9l9 3 40 23 3 1a6 6 0 0 0 6-6l-1-5-8-30v-4c0-4 2-8 5-10"/></svg>',Weibo:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon weibo-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#D52C2B"/><path fill="#D52C2B" d="M256 601c0 68 91 124 203 124 113 0 203-56 203-124s-90-123-203-123c-112 0-203 55-203 123"/><path fill="#FFF" d="M464 715c-99 9-185-35-191-98-7-64 68-123 168-133 99-10 185 34 191 98 7 64-69 123-168 133m199-212c-9-2-15-4-10-15 9-23 10-44 0-58-19-27-73-26-134-1 0 0-19 8-14-7 9-29 8-54-7-68-33-33-121 1-196 75-57 55-90 114-90 165 0 97 127 156 252 156 163 0 271-93 271-167 0-44-38-69-72-80m108-177c-39-43-98-59-151-48-13 3-20 14-18 27 3 12 15 19 27 17 39-8 80 3 108 34 27 29 36 70 24 108a22 22 0 0 0 14 28c12 4 25-3 29-14 18-53 5-112-33-152"/><path fill="#FFF" d="M711 379a78 78 0 0 0-74-23c-11 2-17 12-15 22v1c2 10 12 17 23 15a38 38 0 0 1 36 11c10 10 12 24 8 36a19 19 0 0 0 13 25c10 3 21-3 25-13a74 74 0 0 0-16-74M470 599c-4 6-12 9-18 6-6-2-7-8-4-14s11-9 17-6c6 2 8 8 5 14m-32 40a38 38 0 0 1-46 15c-15-7-20-25-10-39 10-15 29-21 45-15 15 7 20 24 11 39m36-106c-47-12-101 11-121 52-21 41-1 87 47 102 49 16 108-8 128-53 20-44-5-89-54-101"/></svg>',Whatsapp:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon whatsapp-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#31B84C"/><path fill="#fff" d="m192.021 832 45.227-164.33a315.413 315.413 0 0 1-42.539-158.529C194.731 334.251 337.707 192 513.344 192c84.587-.213 165.76 33.28 225.387 93.013A314.453 314.453 0 0 1 832 509.376c-.085 174.848-143.04 317.141-318.656 317.141h-.15a319.61 319.61 0 0 1-152.277-38.613L192 832h.021zm241.686-455.467c-6.443-15.445-13.014-13.354-17.92-13.61-4.63-.214-9.942-.256-15.254-.256a29.227 29.227 0 0 0-21.226 9.898c-7.296 7.958-27.84 27.136-27.84 66.134s28.501 76.672 32.49 81.962c3.968 5.291 56.15 85.334 136 119.638 19.008 8.17 33.814 13.056 45.398 16.704 19.072 6.037 36.437 5.184 50.133 3.157 15.296-2.283 47.125-19.2 53.76-37.675 6.613-18.56 6.613-34.389 4.65-37.717-1.983-3.264-7.295-5.27-15.274-9.237-7.957-3.947-47.125-23.126-54.4-25.771-7.296-2.667-12.587-3.968-17.92 3.947-5.312 7.936-20.565 25.792-25.195 31.061-4.65 5.312-9.301 5.973-17.258 2.005-7.979-3.968-33.622-12.33-64-39.338-23.68-20.992-39.68-46.955-44.331-54.912-4.65-7.915-.47-12.203 3.52-16.15 3.563-3.541 7.936-9.258 11.904-13.866 3.99-4.651 5.333-7.958 7.979-13.227 2.645-5.29 1.322-9.92-.64-13.888-2.006-3.968-17.92-42.987-24.555-58.859h-.021z"/></svg>',Youtube:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon youtube-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DD1829"/><path fill="#fff" d="M800.305 372.2c-12.805-42.429-22.873-65.942-65.303-71.064 0 0-113.644-5.761-226.64-5.761-111.716 0-222.797 5.761-222.797 5.761-44.992 5.122-55.7 29.915-67.223 71.065 0 0-11.524 65.527-11.524 131.886 0 68.066 11.524 137.008 11.524 137.008 8.963 39.87 27.354 65.943 67.223 71.065 0 0 123.292 7.682 240.724 7.682 106.78 0 208.714-7.682 208.714-7.682 39.87-7.682 53.78-28.635 65.303-71.065 0 0 11.523-63.022 11.523-128.045 0-69.288-11.524-140.85-11.524-140.85zM448.82 619.97V393.33l174.781 113.32L448.82 619.97z"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>'}}},e=>{e.O(0,[6038,1386],(()=>e(e.s=8731))),e.O()}]);