"use strict";(self.webpackChunkmiaoxi_blog=self.webpackChunkmiaoxi_blog||[]).push([[2229],{6262:(i,e)=>{e.A=(i,e)=>{const a=i.__vccOpts||i;for(const[i,t]of e)a[i]=t;return a}},7975:(i,e,a)=>{a.r(e),a.d(e,{comp:()=>d,data:()=>h});var t=a(641);const s=a.p+"assets/img/image-20240228171020926.d336dae3.png",n=a.p+"assets/img/image-20240228171529316.d01bbb99.png",l=a.p+"assets/img/image-20240228172110032.1f1d34d4.png",r=a.p+"assets/img/image-20240228174331859.f26a45f1.png",p=a.p+"assets/img/image-20240228174541203.71c4d2db.png",o={},d=(0,a(6262).A)(o,[["render",function(i,e){return(0,t.uX)(),(0,t.CE)("div",null,e[0]||(e[0]=[(0,t.Fv)('<h2 id="断点下载" tabindex="-1"><a class="header-anchor" href="#断点下载"><span>断点下载</span></a></h2><p>要实现下载时的断点续传，首先，服务器在响应时，要在头中加入下面的字段</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Accept-Ranges</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">bytes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个字段是向客户表明：我这个文件可以支持传输部分数据，你只需要告诉我你需要的是哪一部分的数据即可，单位是 <code>bytes</code></p><p>此时，某些支持断点续传的客户端，比如迅雷，他就可以在请求时，告诉服务器需要的数据范围。具体做法是在请求头重加入下面的字段</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">bytes=0-5000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>客户端告诉服务器：请给我传递 0 -5000 字节范围内的数据即可，无需传输全部数据。</p><p>完整流程如下：</p><img src="'+s+'" alt="image-20240228171020926" style="zoom:80%;"><p>在请求下载资源之前，下载器先给服务器发一个 head 类型的请求，用于得到资源信息 head 请求的响应没有响应体，所有数据在响应头中。</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>随后开始使用 GET 请求请求片段数据。</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="断点上传" tabindex="-1"><a class="header-anchor" href="#断点上传"><span>断点上传</span></a></h2><p>整体来说，实现断点上传的主要思路就是要把上传的文件切分为多个小的数据块然后进行上传</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>虽然芬片上传的整体思路一致，但它没有一个统一的、哭提的标准，因此需要根据具体的业务场景制定自己的标准。</p><p>由于标准的不同，意味着分片上传需要自行编写代码实现。</p><p>下面用一种极简的流程实现分片上传</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>MD5 是 hash 算法实现的一个形式。</p></blockquote>',21)]))}]]),h=JSON.parse('{"path":"/posts/moreThanCode/network/breakpointResume.html","title":"断点续传","lang":"zh-CN","frontmatter":{"title":"断点续传","icon":"line-md:uploading-loop","order":20,"category":["网络"],"description":"断点下载 要实现下载时的断点续传，首先，服务器在响应时，要在头中加入下面的字段 这个字段是向客户表明：我这个文件可以支持传输部分数据，你只需要告诉我你需要的是哪一部分的数据即可，单位是 bytes 此时，某些支持断点续传的客户端，比如迅雷，他就可以在请求时，告诉服务器需要的数据范围。具体做法是在请求头重加入下面的字段 客户端告诉服务器：请给我传递 0 ...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/moreThanCode/network/breakpointResume.html"}],["meta",{"property":"og:site_name","content":"大喵喜的技术杂货铺"}],["meta",{"property":"og:title","content":"断点续传"}],["meta",{"property":"og:description","content":"断点下载 要实现下载时的断点续传，首先，服务器在响应时，要在头中加入下面的字段 这个字段是向客户表明：我这个文件可以支持传输部分数据，你只需要告诉我你需要的是哪一部分的数据即可，单位是 bytes 此时，某些支持断点续传的客户端，比如迅雷，他就可以在请求时，告诉服务器需要的数据范围。具体做法是在请求头重加入下面的字段 客户端告诉服务器：请给我传递 0 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-01T01:36:08.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-01T01:36:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"断点续传\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-01T01:36:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jianshu.Shi\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"断点下载","slug":"断点下载","link":"#断点下载","children":[]},{"level":2,"title":"断点上传","slug":"断点上传","link":"#断点上传","children":[]}],"git":{"createdTime":1739717238000,"updatedTime":1740792968000,"contributors":[{"name":"damiaoxi","username":"damiaoxi","email":"miaoxi1110@gmail.com","commits":2,"url":"https://github.com/damiaoxi"}]},"readingTime":{"minutes":1.45,"words":434},"localizedDate":"2025年2月16日","excerpt":"<h2>断点下载</h2>\\n<p>要实现下载时的断点续传，首先，服务器在响应时，要在头中加入下面的字段</p>\\n<div class=\\"language-yaml line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"yaml\\" data-title=\\"yaml\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">Accept-Ranges</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">: </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">bytes</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);