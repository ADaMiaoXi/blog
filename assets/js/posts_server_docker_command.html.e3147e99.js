"use strict";(self.webpackChunkmiaoxi_blog=self.webpackChunkmiaoxi_blog||[]).push([[9156],{66262:(i,e)=>{e.A=(i,e)=>{const s=i.__vccOpts||i;for(const[i,a]of e)s[i]=a;return s}},86805:(i,e,s)=>{s.r(e),s.d(e,{comp:()=>A,data:()=>v});var a=s(20641);const t=s.p+"assets/img/docker-image.b4357086.png",d=s.p+"assets/img/docker-search.48ab66eb.png",l=s.p+"assets/img/docker-pull.43fef2da.png",n=s.p+"assets/img/docker-system-df.97ec07c7.png",h=s.p+"assets/img/docker-run-it.bedcaf0b.png",r=s.p+"assets/img/enter-container1.242df6f9.png",k=s.p+"assets/img/enter-container2.d693bc84.png",c=s.p+"assets/img/reenter-container1.63272a81.png",o=s.p+"assets/img/reenter-container2.3b542ed3.png",p=s.p+"assets/img/export-container.5d67abf9.png",g=s.p+"assets/img/import-container.daa3da7f.png",b=s.p+"assets/img/docker-commands-diagram.339f06c7.png",u={id:"列出当前所有正在运行的容器",tabindex:"-1"},m={class:"header-anchor",href:"#列出当前所有正在运行的容器"},F={},A=(0,s(66262).A)(F,[["render",function(i,e){const s=(0,a.g2)("font");return(0,a.uX)(),(0,a.CE)("div",null,[e[21]||(e[21]=(0,a.Fv)('<h2 id="帮助-启动类命令" tabindex="-1"><a class="header-anchor" href="#帮助-启动类命令"><span>帮助/启动类命令</span></a></h2><h3 id="启动-docker" tabindex="-1"><a class="header-anchor" href="#启动-docker"><span>启动 docker</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="停止-docker" tabindex="-1"><a class="header-anchor" href="#停止-docker"><span>停止 docker</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="重启-docker" tabindex="-1"><a class="header-anchor" href="#重启-docker"><span>重启 docker</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看-docker-状态" tabindex="-1"><a class="header-anchor" href="#查看-docker-状态"><span>查看 docker 状态</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="开机启动" tabindex="-1"><a class="header-anchor" href="#开机启动"><span>开机启动</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看-docker-概要信息" tabindex="-1"><a class="header-anchor" href="#查看-docker-概要信息"><span>查看 docker 概要信息</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看-docker-总体帮助文档" tabindex="-1"><a class="header-anchor" href="#查看-docker-总体帮助文档"><span>查看 docker 总体帮助文档</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查看-docker-命令帮助文档" tabindex="-1"><a class="header-anchor" href="#查看-docker-命令帮助文档"><span>查看 docker 命令帮助文档</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 具体命令</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="镜像命令" tabindex="-1"><a class="header-anchor" href="#镜像命令"><span>镜像命令</span></a></h2><h3 id="列出本地镜像" tabindex="-1"><a class="header-anchor" href="#列出本地镜像"><span>列出本地镜像</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>OPTIONS</code> 说明：<br><code>-a</code>：列出本地所有的镜像（含历史映像层）<br><code>-q</code>：只显示镜像 ID。</p><figure><img src="'+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>REPOSITORY</code>：表示镜像的仓库源<br><code>TAG</code>：镜像的标签版本号<br><code>IMAGE ID</code>：镜像 ID<br><code>CREATED</code>：镜像创建时间<br><code>SIZE</code>：镜像大小</p><blockquote><p>同一仓库源可以有多个 <code>TAG</code> 版本，代表这个仓库源的不同个版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。<br> 如果不指定一个镜像的版本标签，例如只使用 ubuntu，docker 将默认使用 ubuntu:latest 镜像</p></blockquote><h3 id="搜索镜像" tabindex="-1"><a class="header-anchor" href="#搜索镜像"><span>搜索镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> search</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [OPTIONS] imageName</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>OPTIONS</code> 说明：<br><code>--limit</code>: 只列出 N 个镜像，默认 25 个</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> search</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --limit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>NAME</code>：镜像名<br><code>DESCRIPTION</code>：镜像描述<br><code>STARS</code>：点赞数<br><code>OFFICIAL</code>：是否官方镜像<br><code>AUTOMATED</code>：是否自动构建</p><h3 id="下载镜像" tabindex="-1"><a class="header-anchor" href="#下载镜像"><span>下载镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> imageName[:TAG]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>TAG</code>：镜像版本，默认为 latest</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ubuntu</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="查看镜像-容器-数据卷所占的空间" tabindex="-1"><a class="header-anchor" href="#查看镜像-容器-数据卷所占的空间"><span>查看镜像/容器/数据卷所占的空间</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> system</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> df</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="删除镜像" tabindex="-1"><a class="header-anchor" href="#删除镜像"><span>删除镜像</span></a></h3><ul><li>删除单个</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-f] imageID</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>删除多个</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-f] imageName1:TAG imageName2:TAG</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>删除所有</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -qa</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="容器命令" tabindex="-1"><a class="header-anchor" href="#容器命令"><span>容器命令</span></a></h2>',46)),(0,a.Lk)("h3",u,[(0,a.Lk)("a",m,[(0,a.Lk)("span",null,[e[1]||(e[1]=(0,a.eW)("列出当前所有")),(0,a.bF)(s,{color:"red"},{default:(0,a.k6)((()=>e[0]||(e[0]=[(0,a.eW)("正在运行")]))),_:1}),e[2]||(e[2]=(0,a.eW)("的容器"))])])]),e[22]||(e[22]=(0,a.Fv)('<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [OPTIONS]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>OPTIONS</code>说明<br><code>-a</code>：列出当前所有正在运行的（历史上运行过的）容器<br><code>-l</code>：显示最近创建的容器。<br><code>-n</code>：显示最近 n 个创建的容器。<br><code>-q</code>：静默模式，只显示容器编号。</p><h3 id="新建-启动容器" tabindex="-1"><a class="header-anchor" href="#新建-启动容器"><span>新建 + 启动容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [OPTIONS] IMAGE [COMMAND] [ARG...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>OPTIONS</code> 说明<br><code>--name=&quot;ContainerName&quot;</code>：为容器指定一个名称；<br><code>-d</code>：后台运行容器并返回容器 ID，也即启动守护式容器(后台运行)；<br><code>-i</code>：以交互模式运行容器，通常与 <code>-t</code> 同时使用；<br><code>-t</code>：为容器重新分配一个伪输入终端，通常与 <code>-i</code> 同时使用；也即启动交互式容器(前台有伪终端，等待交互)；<br><code>-P</code>：随机端口映射，大写 P<br><code>-p</code>：指定端口映射，小写 p</p><table><thead><tr><th>参数</th><th>举例</th></tr></thead><tbody><tr><td><code>-p hostPort:containerPort</code></td><td>端口映射 <code>-p 8080:80</code></td></tr><tr><td><code>-p hostIp:hostPort:containerPort</code></td><td>配置监听地址 <code>-p 192.168.0.1:8080:80</code></td></tr><tr><td><code>-p hostIp::containerPort</code></td><td>随机分配端口 <code>-p 192.168.0.1::80</code></td></tr><tr><td><code>-p hostPort:containerPort:udp</code></td><td>指定协议 <code>-p 8080:80:udp</code></td></tr><tr><td><code>-p **** -p ****</code></td><td>指定多个 <code>-p 87:80 -p 433:433</code></td></tr></tbody></table><h3 id="启动交互式容器-前台命令行" tabindex="-1"><a class="header-anchor" href="#启动交互式容器-前台命令行"><span>启动交互式容器(前台命令行)</span></a></h3><p>使用镜像 <code>centos:latest</code> 以交互模式启动一个容器,在容器内执行 <code>/bin/bash</code> 命令。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><code>-i</code>: 交互式操作。<br><code>-t</code>: 终端。<br><code>centos</code> : centos 镜像。<br><code>/bin/bash</code>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。<br> 要退出终端，直接输入 <code>exit</code></p></blockquote><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="退出容器-正在运行的容器并以命令行交互" tabindex="-1"><a class="header-anchor" href="#退出容器-正在运行的容器并以命令行交互"><span>退出容器(正在运行的容器并以命令行交互)</span></a></h3><p>两种退出方式</p>',13)),(0,a.Lk)("ul",null,[(0,a.Lk)("li",null,[e[4]||(e[4]=(0,a.Lk)("code",null,"run",-1)),e[5]||(e[5]=(0,a.eW)(" 进入容器，")),e[6]||(e[6]=(0,a.Lk)("code",null,"exit",-1)),e[7]||(e[7]=(0,a.eW)(" 退出，")),(0,a.bF)(s,{color:"blue"},{default:(0,a.k6)((()=>e[3]||(e[3]=[(0,a.eW)("容器停止")]))),_:1}),e[8]||(e[8]=(0,a.eW)("。"))]),(0,a.Lk)("li",null,[e[10]||(e[10]=(0,a.Lk)("code",null,"run",-1)),e[11]||(e[11]=(0,a.eW)(" 进入容器，")),e[12]||(e[12]=(0,a.Lk)("code",null,"ctrl+p+q",-1)),e[13]||(e[13]=(0,a.eW)("退出，")),(0,a.bF)(s,{color:"blue"},{default:(0,a.k6)((()=>e[9]||(e[9]=[(0,a.eW)("容器不停止")]))),_:1}),e[14]||(e[14]=(0,a.eW)("。"))])]),e[23]||(e[23]=(0,a.Fv)('<h3 id="启动已停止运行的容器" tabindex="-1"><a class="header-anchor" href="#启动已停止运行的容器"><span>启动已停止运行的容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containId</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containName</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="重启容器" tabindex="-1"><a class="header-anchor" href="#重启容器"><span>重启容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containId</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containName</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="停止容器" tabindex="-1"><a class="header-anchor" href="#停止容器"><span>停止容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containId</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containName</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="强制停止容器" tabindex="-1"><a class="header-anchor" href="#强制停止容器"><span>强制停止容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kill</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containId</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kill</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containName</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="删除已停止的容器" tabindex="-1"><a class="header-anchor" href="#删除已停止的容器"><span>删除已停止的容器</span></a></h3><ul><li>停止一个容器</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containId</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>一次性删除多个容器实例</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xargs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动容器后会自动退出" tabindex="-1"><a class="header-anchor" href="#启动容器后会自动退出"><span>启动容器后会自动退出？</span></a></h3><p>在大部分的场景下，我们希望 docker 的服务是在后台运行的， 我们可以过 <code>-d</code> 指定容器的后台运行模式。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用镜像 centos:latest 以后台模式启动一个容器</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行 <code>docker ps -a</code> 进行查看, 会发现容器已经退出了</p>',21)),(0,a.Lk)("p",null,[e[16]||(e[16]=(0,a.eW)("很重要的要说明的一点：")),(0,a.bF)(s,{color:"red"},{default:(0,a.k6)((()=>e[15]||(e[15]=[(0,a.eW)("Docker 容器后台运行，就必须有一个前台进程")]))),_:1}),e[17]||(e[17]=(0,a.eW)("。"))]),e[24]||(e[24]=(0,a.Fv)('<p>容器运行的命令如果不是那些一直挂起的命令（比如运行 <code>top</code>，<code>tail</code>），就是会自动退出的。</p><p>这是 docker 的机制问题,比如 web 容器,以 nginx 为例，正常情况下,配置启动服务只需要启动响应的 service 即可。<br> 例如</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但是这样做启动的 nginx 运行在后台进程模式，就会导致 docker 前台没有运行的应用，这样的容器后台启动后，会立即自杀，因为 docker 认为它没事可做了。</p>',4)),(0,a.Lk)("p",null,[e[19]||(e[19]=(0,a.eW)("所以，最佳的解决方案是将要运行的程序以前台进程的形式运行，")),(0,a.bF)(s,{color:"red"},{default:(0,a.k6)((()=>e[18]||(e[18]=[(0,a.eW)("常见就是命令行模式，表示接下来还有交互操作，不要中断")]))),_:1}),e[20]||(e[20]=(0,a.eW)("。"))]),e[25]||(e[25]=(0,a.Fv)('<h3 id="案例-启动-ubuntu" tabindex="-1"><a class="header-anchor" href="#案例-启动-ubuntu"><span>案例：启动 Ubuntu</span></a></h3><ul><li><p>启动 Ubuntu</p><ul><li>前台交互式启动：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ubuntu</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>启动后台进程：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ubuntu</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>查看容器日志</p></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ContainerID</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看容器内运行的进程</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> top</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containerID</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看容器内部细节</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> inspect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containerID</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>进入正在运行的容器并以命令行交互</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containerID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bashShell</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="'+r+'" alt="" loading="lazy"><br><img src="'+k+'" alt="" loading="lazy"></p><ul><li>退出后，重新进入容器</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> attach</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containerID</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><code>docker exec</code> 与 <code>docker attach</code> 的区别</p><ul><li><code>attach</code> 直接进入容器启动命令的终端，不会启动新的进程 用 <code>exit</code> 退出，会导致容器的停止。<br><img src="'+c+'" alt="" loading="lazy"></li><li><code>exec</code> 是在容器中打开新的终端，并且可以启动新的进程 用<code>exit</code>退出，不会导致容器的停止。<br><img src="'+o+'" alt="" loading="lazy"></li></ul></blockquote><h3 id="导入和导出容器" tabindex="-1"><a class="header-anchor" href="#导入和导出容器"><span>导入和导出容器</span></a></h3><ul><li>导出容器</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> export</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> containerID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">filename.tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>导入容器</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> filename.tar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> imageUser/imageName:imageTag</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>command</th><th>description</th></tr></thead><tbody><tr><td><code>attach</code></td><td>Attach to a running container - 当前 shell 下 attach 连接指定运行镜像</td></tr><tr><td><code>build</code></td><td>Build an image from a Dockerfile - 通过 Dockerfile 定制镜像</td></tr><tr><td><code>commit</code></td><td>Create a new image from a container changes - 提交当前容器为新的镜像</td></tr><tr><td><code>cp</code></td><td>Copy files/folders from the containers filesystem to the host path - 从容器中拷贝指定文件或者目录到宿主机中</td></tr><tr><td><code>create</code></td><td>Create a new container - 创建一个新的容器，同 <code>run</code>，但不启动容器</td></tr><tr><td><code>diff</code></td><td>Inspect changes on a container filesystem - 查看 docker 容器变化</td></tr><tr><td><code>events</code></td><td>Get real time events from the server - 从 docker 服务获取容器实时事件</td></tr><tr><td><code>exec</code></td><td>Run a command in an existing container - 在已存在的容器上运行命令</td></tr><tr><td><code>export</code></td><td>Stream the contents of a container as a tar archive - 导出容器的内容流作为一个 tar 归档文件[对应 <code>import</code> ]</td></tr><tr><td><code>history</code></td><td>Show the history of an image - 展示一个镜像形成历史</td></tr><tr><td><code>images</code></td><td>List images - 列出系统当前镜像</td></tr><tr><td><code>import</code></td><td>Create a new filesystem image from the contents of a tarball - 从 tar 包中的内容创建一个新的文件系统映像[对应 <code>export</code>]</td></tr><tr><td><code>info</code></td><td>Display system-wide information - 显示系统相关信息</td></tr><tr><td><code>inspect</code></td><td>Return low-level information on a container - 查看容器详细信息</td></tr><tr><td><code>kill</code></td><td>Kill a running container - kill 指定 docker 容器</td></tr><tr><td><code>load</code></td><td>Load an image from a tar archive - 从一个 tar 包中加载一个镜像[对应 save]</td></tr><tr><td><code>login</code></td><td>Register or Login to the docker registry server - 注册或者登陆一个 docker 源服务器</td></tr><tr><td><code>logout</code></td><td>Log out from a Docker registry server - 从当前 Docker registry 退出</td></tr><tr><td><code>logs</code></td><td>Fetch the logs of a container - 输出当前容器日志信息</td></tr><tr><td><code>port</code></td><td>Lookup the public-facing port which is NAT-ed to PRIVATE_PORT - 查看映射端口对应的容器内部源端口</td></tr><tr><td><code>pause</code></td><td>Pause all processes within a container - 暂停容器</td></tr><tr><td><code>ps</code></td><td>List containers - 列出容器列表</td></tr><tr><td><code>pull</code></td><td>Pull an image or a repository from the docker registry server - 从 docker 镜像源服务器拉取指定镜像或者库镜像</td></tr><tr><td><code>push</code></td><td>Push an image or a repository to the docker registry server - 推送指定镜像或者库镜像至 docker 源服务器</td></tr><tr><td><code>restart</code></td><td>Restart a running container - 重启运行的容器</td></tr><tr><td><code>rm</code></td><td>Remove one or more containers - 移除一个或者多个容器</td></tr><tr><td><code>rmi</code></td><td>Remove one or more images - 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 <code>-f</code> 强制删除]</td></tr><tr><td><code>run</code></td><td>Run a command in a new container - 创建一个新的容器并运行一个命令</td></tr><tr><td><code>save</code></td><td>Save an image to a tar archive - 保存一个镜像为一个 tar 包[对应 load]</td></tr><tr><td><code>search</code></td><td>Search for an image on the Docker Hub - 在 docker hub 中搜索镜像</td></tr><tr><td><code>start</code></td><td>Start a stopped containers - 启动容器</td></tr><tr><td><code>stop</code></td><td>Stop a running containers - 停止容器</td></tr><tr><td><code>tag</code></td><td>Tag an image into a repository - 给源中镜像打标签</td></tr><tr><td><code>top</code></td><td>Lookup the running processes of a container - 查看容器中运行的进程信息</td></tr><tr><td><code>unpause</code></td><td>Unpause a paused container - 取消暂停容器</td></tr><tr><td><code>version</code></td><td>Show the docker version information - 查看 docker 版本号</td></tr><tr><td><code>wait</code></td><td>Block until a container stops, then print its exit code - 截取容器停止时的退出状态值</td></tr></tbody></table>',23))])}]]),v=JSON.parse('{"path":"/posts/server/docker/command.html","title":"常用命令","lang":"zh-CN","frontmatter":{"title":"常用命令","icon":"clarity:command-line","order":5,"category":["Docker"],"description":"帮助/启动类命令 启动 docker 停止 docker 重启 docker 查看 docker 状态 开机启动 查看 docker 概要信息 查看 docker 总体帮助文档 查看 docker 命令帮助文档 镜像命令 列出本地镜像 OPTIONS 说明： -a：列出本地所有的镜像（含历史映像层） -q：只显示镜像 ID。 REPOSITORY：表示...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/server/docker/command.html"}],["meta",{"property":"og:site_name","content":"大喵喜的杂货铺"}],["meta",{"property":"og:title","content":"常用命令"}],["meta",{"property":"og:description","content":"帮助/启动类命令 启动 docker 停止 docker 重启 docker 查看 docker 状态 开机启动 查看 docker 概要信息 查看 docker 总体帮助文档 查看 docker 命令帮助文档 镜像命令 列出本地镜像 OPTIONS 说明： -a：列出本地所有的镜像（含历史映像层） -q：只显示镜像 ID。 REPOSITORY：表示..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-23T08:31:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-23T08:31:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-23T08:31:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jianshu.Shi\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"帮助/启动类命令","slug":"帮助-启动类命令","link":"#帮助-启动类命令","children":[{"level":3,"title":"启动 docker","slug":"启动-docker","link":"#启动-docker","children":[]},{"level":3,"title":"停止 docker","slug":"停止-docker","link":"#停止-docker","children":[]},{"level":3,"title":"重启 docker","slug":"重启-docker","link":"#重启-docker","children":[]},{"level":3,"title":"查看 docker 状态","slug":"查看-docker-状态","link":"#查看-docker-状态","children":[]},{"level":3,"title":"开机启动","slug":"开机启动","link":"#开机启动","children":[]},{"level":3,"title":"查看 docker 概要信息","slug":"查看-docker-概要信息","link":"#查看-docker-概要信息","children":[]},{"level":3,"title":"查看 docker 总体帮助文档","slug":"查看-docker-总体帮助文档","link":"#查看-docker-总体帮助文档","children":[]},{"level":3,"title":"查看 docker 命令帮助文档","slug":"查看-docker-命令帮助文档","link":"#查看-docker-命令帮助文档","children":[]}]},{"level":2,"title":"镜像命令","slug":"镜像命令","link":"#镜像命令","children":[{"level":3,"title":"列出本地镜像","slug":"列出本地镜像","link":"#列出本地镜像","children":[]},{"level":3,"title":"搜索镜像","slug":"搜索镜像","link":"#搜索镜像","children":[]},{"level":3,"title":"下载镜像","slug":"下载镜像","link":"#下载镜像","children":[]},{"level":3,"title":"查看镜像/容器/数据卷所占的空间","slug":"查看镜像-容器-数据卷所占的空间","link":"#查看镜像-容器-数据卷所占的空间","children":[]},{"level":3,"title":"删除镜像","slug":"删除镜像","link":"#删除镜像","children":[]}]},{"level":2,"title":"容器命令","slug":"容器命令","link":"#容器命令","children":[{"level":3,"title":"列出当前所有正在运行的容器","slug":"列出当前所有正在运行的容器","link":"#列出当前所有正在运行的容器","children":[]},{"level":3,"title":"新建 + 启动容器","slug":"新建-启动容器","link":"#新建-启动容器","children":[]},{"level":3,"title":"启动交互式容器(前台命令行)","slug":"启动交互式容器-前台命令行","link":"#启动交互式容器-前台命令行","children":[]},{"level":3,"title":"退出容器(正在运行的容器并以命令行交互)","slug":"退出容器-正在运行的容器并以命令行交互","link":"#退出容器-正在运行的容器并以命令行交互","children":[]},{"level":3,"title":"启动已停止运行的容器","slug":"启动已停止运行的容器","link":"#启动已停止运行的容器","children":[]},{"level":3,"title":"重启容器","slug":"重启容器","link":"#重启容器","children":[]},{"level":3,"title":"停止容器","slug":"停止容器","link":"#停止容器","children":[]},{"level":3,"title":"强制停止容器","slug":"强制停止容器","link":"#强制停止容器","children":[]},{"level":3,"title":"删除已停止的容器","slug":"删除已停止的容器","link":"#删除已停止的容器","children":[]},{"level":3,"title":"启动容器后会自动退出？","slug":"启动容器后会自动退出","link":"#启动容器后会自动退出","children":[]},{"level":3,"title":"案例：启动 Ubuntu","slug":"案例-启动-ubuntu","link":"#案例-启动-ubuntu","children":[]},{"level":3,"title":"导入和导出容器","slug":"导入和导出容器","link":"#导入和导出容器","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1747613942000,"updatedTime":1747989069000,"contributors":[{"name":"damiaoxi","username":"damiaoxi","email":"miaoxi1110@gmail.com","commits":1,"url":"https://github.com/damiaoxi"},{"name":"Jianshu","username":"Jianshu","email":"jianshu.shi@eisgroup.com","commits":2,"url":"https://github.com/Jianshu"}]},"readingTime":{"minutes":7.25,"words":2175},"localizedDate":"2025年5月19日","excerpt":"<h2>帮助/启动类命令</h2>\\n<h3>启动 docker</h3>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">systemctl</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> start</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> docker</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);