"use strict";(self.webpackChunkmiaoxi_blog=self.webpackChunkmiaoxi_blog||[]).push([[2511],{6262:(t,e)=>{e.A=(t,e)=>{const r=t.__vccOpts||t;for(const[t,a]of e)r[t]=a;return r}},9438:(t,e,r)=>{r.r(e),r.d(e,{comp:()=>d,data:()=>i});var a=r(641);const o=r.p+"assets/img/image-20240225211457276.b334622d.png",n=r.p+"assets/img/image-20240225211538760.46eec50a.png",p={},d=(0,r(6262).A)(p,[["render",function(t,e){return(0,a.uX)(),(0,a.CE)("div",null,e[0]||(e[0]=[(0,a.Fv)('<p>浏览器有一个重要的安全策略，称之为「同源策略」。</p><p>其中，源 = 协议 + 主机 + 端口，两个源相同，称之为同源，两个源不同，称之为跨源或跨域。</p><p>比如：</p><table><thead><tr><th>源 1</th><th>源 2</th><th>是否同源</th></tr></thead><tbody><tr><td><a href="http://www.baidu.com" target="_blank" rel="noopener noreferrer">http://www.baidu.com</a></td><td><a href="http://www.baidu.com/news" target="_blank" rel="noopener noreferrer">http://www.baidu.com/news</a></td><td>是</td></tr><tr><td><a href="https://www.baidu.com" target="_blank" rel="noopener noreferrer">https://www.baidu.com</a></td><td><a href="http://www.baidu.com" target="_blank" rel="noopener noreferrer">http://www.baidu.com</a></td><td>否</td></tr><tr><td><a href="http://localhost:5000" target="_blank" rel="noopener noreferrer">http://localhost:5000</a></td><td><a href="http://localhost:7000" target="_blank" rel="noopener noreferrer">http://localhost:7000</a></td><td>否</td></tr><tr><td><a href="http://localhost:7000" target="_blank" rel="noopener noreferrer">http://localhost:7000</a></td><td><a href="http://127.0.0.1:5000" target="_blank" rel="noopener noreferrer">http://127.0.0.1:5000</a></td><td>否</td></tr><tr><td><a href="http://127.0.0.1:5000" target="_blank" rel="noopener noreferrer">http://127.0.0.1:5000</a></td><td><a href="http://baidu.com" target="_blank" rel="noopener noreferrer">http://baidu.com</a></td><td>否</td></tr></tbody></table><p><strong>同源策略是指，若页面的源和页面运行过程中加载的源不一致时，出于安全考虑，浏览器会对跨域的资源访问进行一些限制</strong></p><figure><img src="'+o+'" alt="image-20240225211457276" tabindex="0" loading="lazy"><figcaption>image-20240225211457276</figcaption></figure><p>同源策略对 ajax 的跨域限制的最为凶狠，默认情况下，它不允许 ajax 访问跨域资源。</p><figure><img src="'+n+'" alt="image-20240225211538760" tabindex="0" loading="lazy"><figcaption>image-20240225211538760</figcaption></figure><p>所以，我们通常所说的跨域问题,就是同源策略对 ajax 产生的影响。</p><p>有多种方式解决跨域问题，常见的有:</p><ul><li><strong>代理</strong>，常用</li><li><strong>CORS</strong>，常用</li><li>JSONP</li></ul><p>无论使用哪一种方式，都是要让浏览器知道，我这次跨域请求的是自己人，就不要拦截了。</p>',12)]))}]]),i=JSON.parse('{"path":"/posts/moreThanCode/network/sameOriginPolicy.html","title":"同源策略","lang":"zh-CN","frontmatter":{"title":"同源策略","icon":"fluent-mdl2:view-original","order":7,"category":["网络"],"description":"浏览器有一个重要的安全策略，称之为「同源策略」。 其中，源 = 协议 + 主机 + 端口，两个源相同，称之为同源，两个源不同，称之为跨源或跨域。 比如： 同源策略是指，若页面的源和页面运行过程中加载的源不一致时，出于安全考虑，浏览器会对跨域的资源访问进行一些限制 image-20240225211457276image-2024022521145727...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/moreThanCode/network/sameOriginPolicy.html"}],["meta",{"property":"og:site_name","content":"大喵喜的技术杂货铺"}],["meta",{"property":"og:title","content":"同源策略"}],["meta",{"property":"og:description","content":"浏览器有一个重要的安全策略，称之为「同源策略」。 其中，源 = 协议 + 主机 + 端口，两个源相同，称之为同源，两个源不同，称之为跨源或跨域。 比如： 同源策略是指，若页面的源和页面运行过程中加载的源不一致时，出于安全考虑，浏览器会对跨域的资源访问进行一些限制 image-20240225211457276image-2024022521145727..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-01T15:00:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-01T15:00:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"同源策略\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-01T15:00:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jianshu.Shi\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1739717238000,"updatedTime":1740841217000,"contributors":[{"name":"damiaoxi","username":"damiaoxi","email":"miaoxi1110@gmail.com","commits":3,"url":"https://github.com/damiaoxi"}]},"readingTime":{"minutes":0.94,"words":283},"localizedDate":"2025年2月16日","excerpt":"<p>浏览器有一个重要的安全策略，称之为「同源策略」。</p>\\n<p>其中，源 = 协议 + 主机 + 端口，两个源相同，称之为同源，两个源不同，称之为跨源或跨域。</p>\\n<p>比如：</p>\\n<table>\\n<thead>\\n<tr>\\n<th>源 1</th>\\n<th>源 2</th>\\n<th>是否同源</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\"http://www.baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://www.baidu.com</a></td>\\n<td><a href=\\"http://www.baidu.com/news\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://www.baidu.com/news</a></td>\\n<td>是</td>\\n</tr>\\n<tr>\\n<td><a href=\\"https://www.baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.baidu.com</a></td>\\n<td><a href=\\"http://www.baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://www.baidu.com</a></td>\\n<td>否</td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://localhost:5000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://localhost:5000</a></td>\\n<td><a href=\\"http://localhost:7000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://localhost:7000</a></td>\\n<td>否</td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://localhost:7000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://localhost:7000</a></td>\\n<td><a href=\\"http://127.0.0.1:5000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://127.0.0.1:5000</a></td>\\n<td>否</td>\\n</tr>\\n<tr>\\n<td><a href=\\"http://127.0.0.1:5000\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://127.0.0.1:5000</a></td>\\n<td><a href=\\"http://baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://baidu.com</a></td>\\n<td>否</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}')}}]);