"use strict";(self.webpackChunkmiaoxi_blog=self.webpackChunkmiaoxi_blog||[]).push([[88],{66262:(t,e)=>{e.A=(t,e)=>{const o=t.__vccOpts||t;for(const[t,i]of e)o[t]=i;return o}},84443:(t,e,o)=>{o.r(e),o.d(e,{comp:()=>r,data:()=>n});var i=o(20641);const a={},r=(0,o(66262).A)(a,[["render",function(t,e){const o=(0,i.g2)("catalog");return(0,i.uX)(),(0,i.CE)("div",null,[e[0]||(e[0]=(0,i.Lk)("p",null,"这类模式介绍如何将对象和类组装成较大的结构， 并同时保持结构的灵活和高效。",-1)),(0,i.bF)(o)])}]]),n=JSON.parse('{"path":"/posts/brain-boom/design-patterns/structural/","title":"结构型模式","lang":"zh-CN","frontmatter":{"title":"结构型模式","index":false,"icon":"material-symbols:view-in-ar-outline-rounded","description":"这类模式介绍如何将对象和类组装成较大的结构， 并同时保持结构的灵活和高效。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/brain-boom/design-patterns/structural/"}],["meta",{"property":"og:site_name","content":"大喵喜的技术杂货铺"}],["meta",{"property":"og:title","content":"结构型模式"}],["meta",{"property":"og:description","content":"这类模式介绍如何将对象和类组装成较大的结构， 并同时保持结构的灵活和高效。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-10T08:16:01.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-10T08:16:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"结构型模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-10T08:16:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jianshu.Shi\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1740841217000,"updatedTime":1744272961000,"contributors":[{"name":"damiaoxi","username":"damiaoxi","email":"miaoxi1110@gmail.com","commits":2,"url":"https://github.com/damiaoxi"},{"name":"Jianshu","username":"Jianshu","email":"jianshu.shi@eisgroup.com","commits":1,"url":"https://github.com/Jianshu"}]},"readingTime":{"minutes":0.17,"words":52},"localizedDate":"2025年3月1日","excerpt":"<p>这类模式介绍如何将对象和类组装成较大的结构， 并同时保持结构的灵活和高效。</p>\\n","autoDesc":true}')}}]);